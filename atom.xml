<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to Alice&#39;s BLOG</title>
  
  <subtitle>Love you love, create you can.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/"/>
  <updated>2021-09-26T08:16:15.569Z</updated>
  <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/</id>
  
  <author>
    <name>Alice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lifelongtime</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/09/26/lifelongtime/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/09/26/lifelongtime/</id>
    <published>2021-09-26T08:15:50.000Z</published>
    <updated>2021-09-26T08:16:15.569Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>long time no see</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/06/20/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E5%A4%8D%E4%B9%A0/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/06/20/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E5%A4%8D%E4%B9%A0/</id>
    <published>2021-06-20T01:21:55.277Z</published>
    <updated>2021-06-19T10:09:03.459Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><p>算法和程序</p><ul><li>算法是解决问题的一种方法或一个过程</li><li>算法是若干指令的有穷序列:<ul><li>性质： 输入、输出、确定性、有限性</li></ul></li><li>算法是顺序执行</li><li>算法是对计算机上执行的计算过程的具体描述</li><li>程序时算法用某种程序设计语言的具体实现（可不满足有限性）</li><li>算法复杂性 = 算法所需要的计算机资源</li><li>时间T 空间S 规模n</li></ul><h2 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h2><p>算法介绍：<br>分治法所能解决的问题一般具有以下几个特征：  </p><ul><li>该问题的规模 <u>缩小</u> 到一定的程度就可以 <u>容易地解决</u>；</li><li>该问题可以 <u>分解</u> 为若干个规模较小的相同问题，即该问题具有最优子结构性质 </li><li>利用该问题分解出的子问题的解可以 <u>合并</u> 为该问题的解；</li><li>该问题所分解出的各个子问题是 <u>相互独立的</u>，即子问题之间不包含公共的子问题。 </li></ul><p>$$<br>T(n)=<br>\begin{cases}<br>O(1) &amp; n=1 \<br>kT(n/m)+f(n) &amp; n&gt;1<br>\end{cases}<br>\分治法时间复杂度<br>\T(n)=[n^{log_m k}]+\sum_{j=0}^{n}k^jf(n/m^j)<br>\迭代法求得方程解<br>$$</p><p>k： 子问题个数</p><p>n：问题规模</p><p>n/m: 子问题规模</p><p>f(n): 分解问题，合并问题所需的单位时间</p><table><thead><tr><th align="center">算法</th><th align="center">k</th><th align="center">m</th><th align="center">时间复杂度</th></tr></thead><tbody><tr><td align="center">大整数乘法</td><td align="center">3</td><td align="center">2</td><td align="center">n^1.59</td></tr><tr><td align="center">Strassen矩阵乘法</td><td align="center">7</td><td align="center">2</td><td align="center">n^2.81</td></tr><tr><td align="center">棋盘覆盖</td><td align="center">4</td><td align="center">2</td><td align="center">n^2</td></tr><tr><td align="center">循环赛日程安排</td><td align="center">k</td><td align="center">2</td><td align="center">n^{log_2k}</td></tr></tbody></table><ul><li>算法的分析与实现：</li></ul><h3 id="1-大整数乘法"><a href="#1-大整数乘法" class="headerlink" title="1. 大整数乘法"></a>1. 大整数乘法</h3><ul><li><p>使用分治法：<br>$$<br>有对于分为两段的二进制数(n位)\<br>令：<br>X=A\ 2^{n/2}+B，Y=C\ 2{n/2}+D\<br>故：<br>XY=AC<em>2^n+(AD+BC)</em>2^{n/2}+BD\<br>$$<br>发现：必有 <u>4</u>次n/2位整数乘法 ，3次2n位整数加法，2次移位算法，公用O(n)步运算。</p><p>最大子问题规模n/2 -&gt; m=2, 子问题个数4次 -&gt;k=4</p><p>复杂度与普通方法无差异（n^2）<br>$$<br>运用AD+BC=((A-B)(C-D)+AC+BD)\<br>改进为：<br>XY=AC<em>2^n+((A-B)(C-D)+AC+BD)</em>2^{n/2}+BD\<br>$$<br>该方法：</p><p>仅仅需要3次n/2位整数乘法</p><p>-&gt; m = 2 , k = 3</p></li></ul><h3 id="2-Strassen-矩阵乘法"><a href="#2-Strassen-矩阵乘法" class="headerlink" title="2. Strassen 矩阵乘法"></a>2. Strassen 矩阵乘法</h3><ul><li>使用分治法：<br>$$<br>将矩阵分解为4个大小相等的子矩阵，每个子矩阵都是n/2的方阵\<br>\left[<br>\begin{array}{c|c}<br>C_{11}&amp;C_{12} \  \hline<br>C_{21}&amp;C_{22}<br>\end{array}<h1 id="right"><a href="#right" class="headerlink" title="\right]"></a>\right]</h1>\left[<br>\begin{array}{}<br>A_{11}&amp;A_{12} \<br>A_{21}&amp;A_{22}<br>\end{array}<br>\right]<br>\left[<br>\begin{array}{}<br>B_{11}&amp;B_{12} \<br>B_{21}&amp;B_{22}<br>\end{array}<br>\right]\<br>可得：\<br>C_{11}=A_{11}B_{11}+A_{12}B_{21}\<br>C_{12}=A_{11}B_{12}+A_{12}B_{22}\<br>C_{21}=A_{21}B_{11}+A_{22}B_{21}\<br>C_{22}=A_{21}B_{12}+A_{22}B_{22}\<br>但算法复杂度依旧为8个规模为n/2的乘法-&gt;复杂度(n^4)\<br>改进方法：\<br>M_1=A_{11}(B_{12}-B_{22})\<br>M_2=(A_{11}+A_{12})B_{22}\<br>M_3=(A_{21}A_{22})B_{11}\<br>M_4=A_{22}(B_{21}-B_{11})\<br>M_5=(A_{11}+A_{22})(B_{12}+B_{22})\<br>M_6=(A_{12}-A_{22})(B_{21}+B_{22})\<br>M_7=(A_{11}-A_{21})(B_{11}+B_{12})\<br>再经过若干次加减法得出结果<br>该方法7个规模为n/2的乘法-&gt;复杂度(n^{log_27}=n^{2.81})<br>$$</li></ul><h3 id="3-棋盘覆盖"><a href="#3-棋盘覆盖" class="headerlink" title="3. 棋盘覆盖"></a>3. 棋盘覆盖</h3><ul><li>覆盖2k×2k 个方格组成的棋盘中除特殊方格以外的所有方格，且任何2个L型骨牌不得重叠覆盖。</li><li>当k&gt;0时，将2k×2k棋盘分割为 4 个2k-1×2k-1 子棋盘。 </li><li>特殊方格必位于4个较小子棋盘之一中，其余3个子棋盘中无特殊方格。</li><li>为了将这3个无特殊方格的子棋盘转化为特殊棋盘，可以用一个L型骨牌覆盖这3个较小棋盘的会合处，从而将原问题转化为4个较小规模的棋盘覆盖问题。</li><li>递归地使用这种分割，直至棋盘简化为棋盘1×1。</li></ul><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">chessBoard</span><span class="hljs-params">(<span class="hljs-keyword">int</span> tr, <span class="hljs-keyword">int</span> tc, <span class="hljs-keyword">int</span> dr, <span class="hljs-keyword">int</span> dc, <span class="hljs-keyword">int</span> size)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-comment">// tr 棋盘左上角， dr 特殊方格</span>    <span class="hljs-keyword">if</span> (size == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span>;    <span class="hljs-keyword">int</span> t = tile++,  <span class="hljs-comment">// L型骨牌号</span>    s = size/<span class="hljs-number">2</span>;  <span class="hljs-comment">// 子棋盘大小</span>    <span class="hljs-comment">// 覆盖左上角子棋盘</span>    <span class="hljs-keyword">if</span> (dr &lt; tr + s &amp;&amp; dc &lt; tc + s) <span class="hljs-comment">// 特殊方格在此棋盘中</span>        chessBoard(tr, tc, dr, dc, s);    <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 此棋盘中无特殊方格</span>        board[tr + s - <span class="hljs-number">1</span>][tc + s - <span class="hljs-number">1</span>] = t; <span class="hljs-comment">// 用 t 号骨牌覆盖右下角</span>        chessBoard(tr, tc, tr+s<span class="hljs-number">-1</span>, tc+s<span class="hljs-number">-1</span>, s);    &#125; <span class="hljs-comment">// 覆盖其余方格</span>    <span class="hljs-comment">// 覆盖右上角子棋盘</span>    <span class="hljs-comment">// 覆盖左下角子棋盘</span>    <span class="hljs-comment">// 覆盖右下角子棋盘</span>&#125;</code></pre><ul><li>问题规模n/2, 4 次 -&gt; O(n^2)</li></ul><h3 id="4-循环赛日程"><a href="#4-循环赛日程" class="headerlink" title="4.循环赛日程"></a>4.循环赛日程</h3><ul><li><p>n = 2^k 个运动员进行网球循环赛，设计一个日程表：</p><ul><li>每个选手间相互比一次</li><li>每个选手一天只能比赛依次</li><li>n-1天</li></ul></li><li><p>按分治策略，将所有的选手分为两半</p></li><li><p>n个选手的比赛日程表就可以通过为n/2个选手设计的比赛日程表来决定。</p></li><li><p>递归地用对选手进行分割，直到只剩下2个选手时，让这2个选手进行比赛。</p></li></ul><pre><code class="hljs cpp"><span class="hljs-function">Void <span class="hljs-title">Table</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[][],<span class="hljs-keyword">int</span> begin,<span class="hljs-keyword">int</span> end)</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-keyword">int</span> n=end-begin;<span class="hljs-comment">//待安排比赛的队数</span>    <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">2</span>)  <span class="hljs-comment">//安排两队比赛;</span>    <span class="hljs-keyword">else</span> &#123;            Table(a，begin，begin＋n/<span class="hljs-number">2</span>);         Table(a,begin+n/<span class="hljs-number">2</span>＋<span class="hljs-number">1</span>，end);        Merge(a);            &#125;&#125;</code></pre><ul><li>复杂度k = k, m = 2</li></ul><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><p>算法思想：</p><ul><li>基本思想将待求解问题分解成若干个子问题。 </li><li>若子问题重复，保存已解决的子问题的答案，而在需要时再找出已求得的答案，就可以避免大量重复计算，从而得到多项式时间算法。</li></ul><p>基本要素：</p><ul><li>最优子结构</li><li>重叠子问题</li></ul><p>动态规划基本步骤：</p><ul><li>分析最优值的性质，得到 <u>最优值的递归定义</u></li><li><u>自底向上</u>地计算 <u>子问题的最优值</u>，逐步得到原问题的最优值，并记录计算过程</li><li>由最优值的计算过程出 <u>构造</u> 原问题的最优解</li></ul><table><thead><tr><th align="center">算法</th><th align="center">时间复杂度</th><th align="center">空间复杂度</th></tr></thead><tbody><tr><td align="center">矩阵连乘</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">最长公共子序列</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">流水作业调度</td><td align="center">nlogn</td><td align="center">n</td></tr><tr><td align="center">0-1背包问题</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">电路布线问题</td><td align="center"></td><td align="center"></td></tr></tbody></table><ul><li>算法问题与分析</li></ul><h3 id="1-矩阵连乘"><a href="#1-矩阵连乘" class="headerlink" title="1. 矩阵连乘"></a>1. 矩阵连乘</h3><p>$$<br>将A_i<em>A_{i+1}…..</em>A_j记作A_{i,j}\<br>设最优解的最后一步为：A_{1,k}<em>A_{k+1,n}\<br>最优结构：A_{1,k}、A_{k+1,n}应当分别为该子式的最优解\<br>——————————\<br>建立递归关系：设计算A[i:j] ， 1&lt;=i&lt;=j，所需最小乘数m[i,j]\<br>问题最优值：m[1,n]\<br>m[i,j]=<br>\begin{cases}<br>0 &amp; i=j\<br>\underset{i&lt;=k&lt;j}\min{m[i,k]+m[k+1,j]+p_{i-1}p_kp_j} &amp; i&lt;j<br>\end{cases}\<br>A_i的维数为p_{i-1}</em>p_i\<br>k为最佳顺序中两个子序列的中间断开点<br>$$</p><h3 id="2-最长公共子序列"><a href="#2-最长公共子序列" class="headerlink" title="2. 最长公共子序列"></a>2. 最长公共子序列</h3><p>$$<br>c[i][j]=<br>\begin{cases}<br>0 &amp; i=0,j=0\<br>c[i-1][j-1]+1 &amp; i,j&gt;0;x_i=y_j\<br>max{c[i][j-1],c[i-1][j] } &amp; i,j&gt;0;x_i ≠ y_j<br>\end{cases}\<br>c[i][j]记录两序列的最长公共子序列长度<br>$$</p><h3 id="3-流水作业调度"><a href="#3-流水作业调度" class="headerlink" title="3. 流水作业调度"></a>3. 流水作业调度</h3><p>n个作业{1，2，…，n}要在由2台机器M1和M2组成的流水线上完成加工。每个作业加工的顺序都是先在M1上加工，然后在M2上加工。M1和M2加工作业i所需的时间分别为ai和bi。</p><p>流水作业调度问题要求确定这n个作业的最优加工顺序，使得从第一个作业在机器M1上开始加工，到最后一个作业在机器M2上加工完成所需的时间最少<br>$$<br>Johnson法则：min{b_{Π(i)},a_{Π(j)}}&gt;=min{b_{Π(j)},a_{Π(i)}}<br>$$<br><u>所有</u> 满足Johnson法则的调度 均为 <u>最优调度</u></p><p>算法：<br>(1)令N_1={i | a_i &lt; b_i}, N_2={i|a_i&gt;=b_i}</p><p>(2)令N_1中作业依据a_i非减序排序，N_2中作业按b_i非增序列排序</p><p>(3)N_1 、 N_2构成满足Johnson法则最优调度</p><p>算法复杂度：</p><p>T:O(nlogn) </p><p>S:O(n)</p><h3 id="4-0-1背包"><a href="#4-0-1背包" class="headerlink" title="4. 0-1背包"></a>4. 0-1背包</h3><ul><li>问题描述<ul><li>给定n种物品和一背包。</li><li>物品i的重量是wi，</li><li>其价值为vi，</li><li>背包的容量为C。</li><li>问应如何选择装入背包的物品，使得装入背包中物品的 <u>总价值最大</u>?</li></ul></li></ul><p>$$<br>m[i,j]=<br>\begin{cases}<br>max{m(i+1,j),m(i+1,j-w_i)+v_i} &amp; j&gt;w_i\<br>m(i+1,j) &amp; 0&lt;=j&lt;w_i<br>\end{cases}\<br>j:背包容量\<br>i:物品\<br>m(i,j)是背包容量为j，可选择物品为i，i+1，…，n时0-1背包问题的最优值。<br>$$</p><h3 id="5-电路布线问题"><a href="#5-电路布线问题" class="headerlink" title="5.电路布线问题"></a>5.电路布线问题</h3><ul><li><p>问题描述</p></li><li><p>在一块电路板的上、下两端分别有n个接线柱。根据电路设计，要求用导线(i,π(i)) 将上端接线柱i与下端接线柱π(i)相连。</p></li><li><p>电路布线问题要确定将哪些连线安排在一层上，使得该层上有尽可能多的连线。即求Nets = ｛i，π(i)，1 ≤ i ≤ n｝的最大不相交子集。</p></li></ul><p>$$<br>当i = 1,\<br>Size(1,j)=<br>\begin{cases}<br>0 &amp; j &lt; Π(1)\<br>1 &amp; j &gt;= Π(1)<br>\end{cases}\<br>当i &gt; 1,\<br>Size(i,j)=<br>\begin{cases}<br>Size(i-1,j) &amp; j &lt; Π(i)\<br>max{Size(i-1,j),Size(i-1,Π(i)-1)} &amp; j &gt;= Π(i)<br>\end{cases}\<br>Size(n,n):最优值<br>$$</p><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><p>算法核心：局部最优解</p><ul><li>最优子结构</li><li>贪心选择</li></ul><table><thead><tr><th align="center">算法</th><th align="center">算法时间复杂度</th></tr></thead><tbody><tr><td align="center">最优装载</td><td align="center"></td></tr><tr><td align="center">（0-1）背包装载</td><td align="center"></td></tr><tr><td align="center">活动安排</td><td align="center"></td></tr><tr><td align="center">多机调度</td><td align="center"></td></tr></tbody></table><ul><li>问题分析</li></ul><h3 id="1-最优装载"><a href="#1-最优装载" class="headerlink" title="1. 最优装载"></a>1. 最优装载</h3><ul><li><p>问题分析</p></li><li><p>有一批集装箱要装上一艘载重量为c的轮船。</p></li><li><p>其中集装箱i的重量为Wi。</p></li><li><p>最优装载问题要求确定在装载体积不受限制的情况下，</p></li><li><p>将尽可能多的集装箱装上轮船。</p><ul><li>问题实质,0-1背包，价值vi皆为1,但此题用贪心法求解</li></ul></li><li><p>算法：</p><ul><li>首先计算每种物品单位重量的价值Vi/Wi，然后，依贪心选择策略，将尽可能多的单位重量价值最高的物品装入背包。依此策略直到背包装满为止。</li></ul></li></ul><h3 id="2-活动安排"><a href="#2-活动安排" class="headerlink" title="2. 活动安排"></a>2. 活动安排</h3><ul><li><p>安排最大相容量</p></li><li><p>算法：</p><ul><li>将所有活动按结束时间排序，得到活动集合E={e1,e2…e_n}；</li><li>先将e1选入结果集合A中，即A={e1}；</li><li>依次扫描每一个活动e_i：<ul><li>如果e_i的 <u>开始</u> 时间 <u>晚于</u> 最后一个选入A的活动e_j的 <u>结束</u> 时间，则将e_i <u>选入</u> A中，否则放弃e_i；</li></ul></li></ul></li></ul><h3 id="3-多机调度"><a href="#3-多机调度" class="headerlink" title="3. 多机调度"></a>3. 多机调度</h3><ul><li>要求给出一种作业调度方案，</li><li>使所给的n个作业在尽可能短的时间内由m台机器加工处理完成。</li><li>算法：<ul><li>采用最长处理时间作业优先的贪心选择策略可以设计出解多机调度问题的较好的近似算法。</li><li>当n&lt;=m时，只要将机器i的[0, ti]时间区间分配给作业i即可，算法只需要<strong>O(1)</strong>时间。</li><li>当n&gt;m时，首先将n个作业依其 <u>所需的处理时间</u> <u>从大</u> 到小排序。然后依此顺序将作业分配给空闲的处理机。算法所需的计算时间为O(nlogn)。</li></ul></li></ul><h2 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h2><p>我简称为DFS</p><p>算法核心：</p><ul><li>针对问题，定义解空间</li><li>确定易于搜索的解空间结构</li><li>以深度优先方式搜索解空间，并在搜索过程中用剪枝函数避免无效搜索</li></ul><p>剪枝函数：</p><ul><li><p>用约束函数在扩展节点处剪去不满足约束的子树。</p></li><li><p>用限界函数剪去得不到最优解的子树</p></li></ul><table><thead><tr><th align="center">算法</th><th align="center">时间复杂度</th></tr></thead><tbody><tr><td align="center">最优装载问题*</td><td align="center"></td></tr><tr><td align="center">批处理作业调度</td><td align="center"></td></tr><tr><td align="center">n后</td><td align="center"></td></tr><tr><td align="center">图m着色</td><td align="center"></td></tr><tr><td align="center">旅行售货员</td><td align="center"></td></tr></tbody></table><ul><li>算法问题分析</li></ul><h3 id="1-装载问题"><a href="#1-装载问题" class="headerlink" title="1. 装载问题"></a>1. 装载问题</h3><ul><li>有一批共n个集装箱</li><li>要装上2艘载重量分别为c1和c2的轮船，</li><li>其中集装箱i的重量为wi，且</li></ul><p>$$<br>\sum_{i=1}^{n}w_i&lt;=c_1+c_2<br>$$</p><ul><li><p>首先将第一艘轮船尽可能装满；</p></li><li><p>将剩余的集装箱装上第二艘轮船。</p></li><li><p>算法：(2^n)</p><ul><li>约束函数（选择装入当前元素）：</li></ul><p>$$<br>\sum_{i=1}^{n}w_ix_i&lt;=c_1<br>$$</p><pre><code>* 限界函数（不选择装入当前元素）：cw +r &lt;= bestw* Betstw为当前已经计算出的最优装载重量。* Cw是装载到目前为止的总量。* r为剩余集装箱的重量。</code></pre></li><li><p>执行过程<br>1、从树根开始，计算当前载重量；<br>2、判断其左子树（装入）是否满足约束条件，满足则继续深度优先搜索左子树，重复2；<br>3、判断其右子树是否满足限界条件（是否可能含有最优解），满足则深度优先搜索右子树，重复2；<br>4、到达叶子，则找到一个解；搜索完解空间树，得到最优解。</p></li></ul><h3 id="2-批处理作业调度"><a href="#2-批处理作业调度" class="headerlink" title="2. 批处理作业调度"></a>2. 批处理作业调度</h3><ul><li>算法描述：<ul><li>给定n个作业的集合{1,2,…n}。</li><li>每个作业必须先由机器1处理，然后由机器2处理。</li><li>作业i需要机器j的处理时间为tji。</li><li>对于一个确定的作业调度，设Fji是作业i在机器j上完成处理的时间。</li><li>所有作业在机器2上完成处理的时间和称为该作业调度的完成时间和。</li></ul></li><li>解释：<ul><li>流水作业调度的最终目标是要求完成所有任务的时间最短，所以把最后一个任务的完成时间作为标准；</li><li>而批处理作业调度的目的是要让每一个作业都尽快得到处理，所以要把每个作业的完成时间之和作为标准。</li></ul></li><li>算法:O（n!）<ul><li>初始化（起始状态）；<br>从第一个作业开始<pre><code>找待安排的作业如果当前结果比最小时间和小    继续试探下一个作业安排    如果已经是全部任务安排完成          得到一个解          撤掉该子，继续寻找下一个可能解    否则（未到最后）          准备处理下一个作业否则     回溯到上一个顶点，并重新安排任务</code></pre></li></ul></li></ul><h3 id="3-n皇后问题"><a href="#3-n皇后问题" class="headerlink" title="3. n皇后问题"></a>3. n皇后问题</h3><ul><li><p>算法：</p><p>1、从空棋盘起，逐行放置棋子。</p><p>2、在一个布局中放下一个棋子，即推演到另一个布局。</p><p>3、如果某一行中没有可合法放置棋子的位置，则回溯到上一行，重新布放上一行的棋子。</p></li></ul><h3 id="4-图的m着色"><a href="#4-图的m着色" class="headerlink" title="4. 图的m着色"></a>4. 图的m着色</h3><ul><li>问题描述：<ul><li>给定无向连通图G和m种不同的颜色。</li><li>用这些颜色为图G的各顶点着色，每个顶点着一种颜色。</li><li>是否有一种着色法使G中每条边的2个顶点着不同颜色?</li></ul></li><li>算法 O（nm^n）<br>初始化（起始状态）；<br>从第一个顶点开始<pre><code>由当前顶点安排下一个顶点可设置的颜色如果找到了可以设置的颜色    置顶点颜色    如果已经是最后一个顶点          得到一个解          回溯，继续寻找下一个解    否则（未到最后）          准备处理下一个顶点否则（没有找到可以设置的颜色）     回溯到上一个顶点，并去除该顶点的颜色</code></pre></li></ul><h3 id="5-旅行售货员"><a href="#5-旅行售货员" class="headerlink" title="5. 旅行售货员"></a>5. 旅行售货员</h3><ul><li><p>问题描述</p><ul><li>有一个售货员要开车到N个指定的城市去推销货物，</li><li>他必须经过全部N个城市并且每个城市仅经过一次。</li><li>现在他有一张n个城市的地图并知道各个城市之间的公路里程wi，</li><li>试问他应该如何选取最短的行程从家里出发对N个城市旅行一遍并再回到家中</li></ul></li><li><p>算法：O（n!）</p><p>初始化（起始状态）；<br>从图的第一个顶点开始</p><pre><code>由当前顶点找下一个邻接的顶点如果比最小代价小    放当前顶点城市到最短路径中    如果已经是最后一个顶点          得到一个解          撤掉该子，继续寻找下一个解    否则（未到最后）          准备处理下一个邻接顶点否则     回溯到上一个顶点，并去除该顶点的分支</code></pre></li></ul><h2 id="分支限界法"><a href="#分支限界法" class="headerlink" title="分支限界法"></a>分支限界法</h2><p>我简称为BFS（或最小耗费优先）</p><p>求解目标：</p><ul><li>回溯法是找出解空间树种满足约束条件的所有解</li><li>分支限界法是找出满足约束条件的一个解，或者最优解</li></ul><p>基本思想：</p><ul><li>在扩展节点处，先生成其所有的儿子节点（分支），然后再从当前节点的活结点表中选择下一个扩展节点</li><li>扩展节点选择：在每一个活结点出，计算一个函数优先值（优先级），并根据这些已计算出的函数值，从当前活结点表中选择一个最有利的节点作为扩展节点</li></ul><p>分类：</p><ul><li>队列式（BFS）</li><li>优先队列式（通过函数计算值，丢到priority_queue中）</li></ul><table><thead><tr><th align="center">算法</th><th align="center">时间复杂度</th></tr></thead><tbody><tr><td align="center">0-1背包</td><td align="center"></td></tr><tr><td align="center">装载问题</td><td align="center"></td></tr><tr><td align="center">旅行售货员</td><td align="center"></td></tr></tbody></table><ul><li>算法描述</li></ul><h3 id="1-0-1背包"><a href="#1-0-1背包" class="headerlink" title="1. 0-1背包"></a>1. 0-1背包</h3><ul><li>算法：<ul><li>首先，要对输入数据进行预处理，将各物品依其单位重量价值从大到小进行排列。</li><li>在使用优先队列分支限界法中，节点的优先级由<ul><li>已装袋的物品价值加上</li><li>剩下的 最大单位重量价值 的物品 装满剩余容量的价值和</li></ul></li></ul></li></ul><p>初始化，将物品按照单位价值的从大到小顺序排列；<br>从第一个物品开始<br>       左儿子加入后可否满足控制约束<br>             将顶点i加入到最大优先队列中<br>             修改最大价值,修改上界条件<br>       否则检查右儿子可否满足条件<br>             将右儿子加入优先队列<br>             修改上界条件<br>取下一扩展结点<br>当队列为空时<br>       输出当前记录的路径</p><h3 id="2-装载问题"><a href="#2-装载问题" class="headerlink" title="2. 装载问题"></a>2. 装载问题</h3><ul><li>算法:</li></ul><p>队列式分支限界法<br>     算法描述：<br>        未搜索到树的结束<br>        检查左儿子结点是否满足约束条件<br>            左儿子加入扩展队列<br>            根据当前修改当前最优解（可装载的最大重量）<br>            右儿子结点总是可行的，加入队列<br>        取下一扩展结点<br>             判断是否同层结点尾部（－1）<br>                 如果队空返回最优解（可装载的最大重量）<br>                  加入同层结点尾部标志<br>                 取下一扩展结点<br>                 进入下一层</p><h3 id="3-旅行售货员"><a href="#3-旅行售货员" class="headerlink" title="3. 旅行售货员"></a>3. 旅行售货员</h3><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210619172652683.png" alt="image-202106191726 52683" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/06/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/</id>
    <published>2021-06-07T02:17:30.909Z</published>
    <updated>2021-06-07T02:09:31.325Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库技术"><a href="#数据库技术" class="headerlink" title="数据库技术"></a>数据库技术</h1><h2 id="第一章-（概念）"><a href="#第一章-（概念）" class="headerlink" title="第一章 （概念）"></a>第一章 （概念）</h2><h3 id="数据库技术-1"><a href="#数据库技术-1" class="headerlink" title="数据库技术"></a>数据库技术</h3><ol><li>数据库技术一般包括 <u>数据管理</u> 和 <u>数据处理</u> 两部分</li><li>数据库技术主要研究内容是如何对数据进行科学的管理，以提供：<u>可共享、安全、可靠的数据</u></li></ol><h3 id="数据库系统"><a href="#数据库系统" class="headerlink" title="数据库系统"></a>数据库系统</h3><ol><li>本质上是一个用 <u>计算机存储数据的系统</u></li><li>除保存数据外。还对数据进行各种 <u>管理和处理</u>：<ul><li>安全管理</li><li>数据共享</li><li>数据查询</li></ul></li></ol><h3 id="数据库基本概念"><a href="#数据库基本概念" class="headerlink" title="数据库基本概念"></a>数据库基本概念</h3><ol><li>四个基本概念<ul><li>数据</li><li>数据库系统</li><li>数据库</li><li>数据库管理系统</li></ul></li><li><u>数据</u> 是数据库中的存储的 <u>基本对象</u></li><li><u>数据</u>：<ul><li>描述事物的符号记录</li></ul></li><li><u>数据的种类</u>：<ul><li>文本、图像、图形、音频、视频、等</li></ul></li><li>数据的含义称为数据的 <u>语义</u> ， 数据与其语义 <u>不可分割</u></li></ol><h3 id="事物的描述"><a href="#事物的描述" class="headerlink" title="事物的描述"></a>事物的描述</h3><ol><li><p>日常生活用 <u>自然语言</u> 描述事物</p><p>如一门课的信息： 数据存储课程，4个学分，第4学期开设。</p><p><u>记录表示</u>： （数据存储， 4， 4）</p></li></ol><h3 id="数据库系统-1"><a href="#数据库系统-1" class="headerlink" title="数据库系统"></a>数据库系统</h3><p>数据库系统是：</p><ul><li>由数据库、数据库管理系统（及相关使用工具）</li><li>应用程序、数据库管理员组成的存储、管理、处理和维护数据的系统</li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ol><li><p>数据库概念</p><ol><li>一个含有 大量数据，可能被许多部门和用户同时使用的 大数据集</li><li>是存放数据的仓库</li><li><u> 永久存储</u> 在计算机存储设备上</li><li>按一定的格式存储</li><li><u> 是有组织</u>、<u>可共享</u> 的大量数据的集合</li></ol></li><li><p>—： </p><ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521104724770.png" alt="image-20210521104724770"></li></ul></li><li><p>三个基本特点</p><ol><li>永久存储</li><li>有组织</li><li>可共享</li></ol></li></ol><h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><ul><li>是一个专门用于实现对数据进行管理和维护的 <u>系统软件</u></li><li>是一个与永用户的应用程序和数据库相互作用的软件</li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521105254316.png" alt="image-20210521105254316"></p><h3 id="DBMS"><a href="#DBMS" class="headerlink" title="DBMS"></a>DBMS</h3><ul><li>数据库的建立和维护功能<ul><li>数据库初始数据装载 转换</li><li>数据库转储</li><li>介质故障恢复</li><li>数据库的重组织</li><li>性能监视分析</li></ul></li><li>数据库的事物管理和运行管理<ul><li>数据库在建立、运行和维护的时由 <u>DBMS</u> 统一 <u>管理</u> 和 <u>控制</u></li><li>保证数据的安全性、完整性、多用户对数据的并发使用</li><li>发生故障后的系统恢复</li></ul></li></ul><h3 id="数据库管理技术发展"><a href="#数据库管理技术发展" class="headerlink" title="数据库管理技术发展"></a>数据库管理技术发展</h3><ul><li>人工管理 1940 + 10</li><li>文件系统 1950 + 10</li><li>数据库系统 1960 - now</li></ul><h3 id="数据库管理的优点"><a href="#数据库管理的优点" class="headerlink" title="数据库管理的优点"></a>数据库管理的优点</h3><ul><li><p>相互关联的数据的集合</p></li><li><p>较少的数据冗余</p></li><li><p>程序与数据 <u>相互独立</u> </p><ul><li><p>数据独立性是指数据的组织与存储方法和应用程序互不依赖、彼此独立</p></li><li><p><strong>应用程序不会因数据的物理表示方式和访问技术的改变而改变</strong></p></li><li><p><strong>即应用程序不依赖于任何特定的物理表示方式和访问技术</strong></p><ul><li><p><strong>逻辑独立性</strong></p><ul><li><p>指当表达现实世界的信息内容发生变化时，如：</p><ul><li><p>增加信息</p></li><li><p>删除无用信息等</p></li></ul></li><li><p>不影响 <u>应用程序</u> 的特性。</p></li></ul></li><li><p>物理独立性</p><ul><li>指当数据的存储位置或存储结构发生变化时，不影响 <u>应用程序</u> 的特性</li></ul></li></ul></li></ul></li><li><p>保证数据的安全、可靠</p><ul><li>数据库技术要能够保证数据库中的数据是安全可靠的：<ul><li>主动安全<ul><li>防止非法使用</li></ul></li><li>被动安全<ul><li>完全恢复</li></ul></li></ul></li></ul></li><li><p>最大限度的保证数据的 <u>正确性</u></p><ul><li>数据完整性</li></ul></li><li><p>数据可以并发使用并能保证 <u>一致性</u></p><ul><li>多用户使用数据库，<u>能不产生冲突矛盾</u>，保证顺一致性和正确性</li></ul></li></ul><h3 id="数据库系统的组成"><a href="#数据库系统的组成" class="headerlink" title="数据库系统的组成"></a>数据库系统的组成</h3><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521111019119.png" alt="image-20210521111019119"></p><h2 id="第二章-（数据模型、数据库结构）"><a href="#第二章-（数据模型、数据库结构）" class="headerlink" title="第二章 （数据模型、数据库结构）"></a>第二章 （数据模型、数据库结构）</h2><h3 id="数据与信息"><a href="#数据与信息" class="headerlink" title="数据与信息"></a>数据与信息</h3><ol><li><u>数据</u> 描述事物的 <u>符号记录</u></li><li><u>信息</u> 从数据中获取的有意义的内容</li><li>数据的语法（规定数据的格式），数据的语义（数据的含义）</li><li>数据是信息存在的一种形式，只有通过解释或处理才能成为有用信息</li></ol><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><ul><li><p>数据模型是对现实世界数据特征的抽象（现实世界的模拟）</p></li><li><p>在数据库中用数据模型这个工具来 <u>抽象、表示以及处理</u>现实世界中的数据和信息</p></li><li><p>数据模型应满足：</p><ul><li>能比较真实的模拟现实世界</li><li>容易被人理解</li><li>便于在计算机上实现</li></ul></li><li><p>数据模型分两类</p><ul><li><u>概念层模型</u></li><li><u>组织层模型</u><ul><li><u>逻辑模型</u></li><li><u>物理模型</u></li></ul></li></ul></li><li><p>客观对象抽象过程 2步</p><ul><li><p>现实世界中的客观对象抽象为 <u>概念模型</u></p></li><li><p>把 <u>概念模型</u> 转换为某一DBMS支持的数据模型</p></li></ul></li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112236559.png" alt="image-20210521112236559"></p><h3 id="重点：-ER图"><a href="#重点：-ER图" class="headerlink" title="重点： ER图"></a>重点： ER图</h3><ol><li>实体-联系方法使用的工具称为E-R图</li><li>把这种描述结果称为e-r模型</li></ol><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112421712.png" alt="image-20210521112421712"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112433604.png" alt="image-20210521112433604"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112446891.png" alt="image-20210521112446891"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112459042.png" alt="image-20210521112459042"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112512620.png" alt="image-20210521112512620"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210521112526238.png" alt="image-20210521112526238"></p><h4 id="联系的说明"><a href="#联系的说明" class="headerlink" title="联系的说明"></a>联系的说明</h4><ul><li><p>一对一联系时一对多联系的特例，二一对多又是多对多的特例</p></li><li><p>实体之间联系的种类与 <u>语义</u>直接相关</p></li><li><p>例子：</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210524114911044.png" alt="image-20210524114911044"></p></li></ul><h3 id="组织层数据模型"><a href="#组织层数据模型" class="headerlink" title="组织层数据模型"></a>组织层数据模型</h3><ul><li>最重要的一种数据模型： <u>关系数据模型</u></li><li><u>关系数据库</u> 采用 <u>关系数据模型</u> 作为数据 <u>组织方式</u></li><li>关系数据模型源于 <u>数学</u> 把数据看作 <u>二维表</u> 中的元素，二维表在关系数据库中称为 <u>关系</u></li><li>关系数据库的 <u>数据模型</u> 为 <u>二维表</u></li></ul><h4 id="数据模型三要素"><a href="#数据模型三要素" class="headerlink" title="数据模型三要素"></a>数据模型三要素</h4><ul><li>数据结构 -&gt; 描述 <u>数据库</u> 组成对象 和 对象 之间的联系</li><li>数据操作 -&gt;查询和更新</li><li>数据的完整性约束条件</li></ul><h3 id="数据库结构（模式）"><a href="#数据库结构（模式）" class="headerlink" title="数据库结构（模式）"></a>数据库结构（模式）</h3><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210524115729076.png" alt="image-20210524115729076"></p><ul><li><u>数据模型</u>： （组织层数据模型）时描述数据的组织形式</li><li><u>模式</u> （数据库系统结构中间层）是用给定的数据模型 对 具体数据的描述， 无物理存储<ul><li>模式一定是关系的，实际上是数控数据在逻辑级上的 <u>视图</u></li><li>一个数据库只有 <u>一种模式</u></li><li>外模式 是关系的，内容来自内模式</li><li>内模式 （存储模式）不是关系的，是数据物理存储方式</li></ul></li><li>类似用编程语言写具体应用程序</li><li><u>关系模型</u> 是关系的 <u>型</u> 或元组的 <u>结构共性</u> 的描述</li><li>模式的一个具体值称模式的一个 <u>实例</u></li><li>比如： 表中的每一行数据就是一个具体实例</li><li>模式： <u>相对稳定</u></li><li>实例： <u>相对变动</u></li><li><strong>模式映象与数据独立性</strong><ul><li>外模式/模式映象<ul><li>当模式改变，可用 外模式/<u>模式</u> 定义语句，调整 <u>外模式</u>/模式 映象定义， <u>保持外模式不变</u></li><li><u>数据和程序逻辑独立</u></li></ul></li><li>模式/内模式映象<ul><li>当存储结构改变，可（由DBA）用 <u>内模式</u> 定义语句，调整 <u>内模式</u>定义，从而保持模式不变</li><li>数据和程序物理独立（存储独立）</li></ul></li></ul></li></ul><ul><li><p>小结</p><p>​    <img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210524121145812.png" alt="image-20210524121145812"></p></li></ul><h2 id="第三章-（关系数据库）"><a href="#第三章-（关系数据库）" class="headerlink" title="第三章 （关系数据库）"></a>第三章 （关系数据库）</h2><h3 id="1-关系模型"><a href="#1-关系模型" class="headerlink" title="1. 关系模型"></a>1. 关系模型</h3><p><u>关系模型三要素</u>：</p><ul><li>数据结构</li><li>操作集合</li><li>完整性约束</li></ul><h3 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2. 数据结构"></a>2. 数据结构</h3><ul><li><p>二维表组织数据</p></li><li><p>二维表在关系数据库中称为 <u>关系</u></p></li><li><p>关系数据库就是 <u>表</u> 或说是 <u>关系的集合</u></p></li><li><p>表是 <u>逻辑结构</u> 而不是物理结构</p></li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210524215814206.png" alt="image-20210524215814206"></p><h3 id="3-数据操作"><a href="#3-数据操作" class="headerlink" title="3. 数据操作"></a>3. 数据操作</h3><ul><li>关系数据模型中的操作：</li><li><u>传统的关系运算</u>：并、差、交、广义笛卡儿积</li><li><u>专门的关系运算</u>：选择、投影、连接、除</li><li><u>有关的数据操作</u>：查询、插入、删除、更改</li></ul><h3 id="4-数据完整性约束"><a href="#4-数据完整性约束" class="headerlink" title="4. 数据完整性约束"></a>4. 数据完整性约束</h3><ul><li><p>数据的完整性是指保证数据正确性的特征</p></li><li><p>数据完整性是一种 <u>语义概念</u>， 包括：</p><ul><li>与 <u>现实世界中应用需求</u> 的数据的相容性和正确性</li><li><u>数据库内</u> 数据之间的 <u>相容性和正确性</u></li></ul></li><li><p><u>数据完整性</u> 是由一组完整性规则定义、关系模型的完整性规则是对关系的某种约束条件</p></li><li><p>关系数据模型中 <u>数据完整性分三类</u></p><ul><li>实体完整性<ul><li>保证关系中的每个元组 <u>可识别</u>、<u>唯一</u></li><li>关系数据库中所有的表必须 <u>有主键</u>，表中不允许存在如下记录：<ul><li>无主键的记录</li><li>主键值相同的记录 </li></ul></li></ul></li><li>参照（引用）完整性<ul><li>实体与实体间的联系由关系来表示，关系和关系间存在引用</li><li>描述实体间的联系</li><li><u>多个实体</u> 或 <u>关系之间</u> 的关联关系</li><li>定义外键与被参照的主键之间的引用规则</li><li>外键一般应符合如下要求<ul><li>值为空</li><li>等于其所参照的关系中的某个元组的主键值</li></ul></li><li>外键定义：<ul><li>设F是关系R的一个或一组 <u>属性</u>，如果F与关系S的 <u>主键相对应</u>，则称F是关系R的外键（Foreign Key），并称关系R <u>为参照关系</u>，关系S为 <u>被参照关系</u>。关系R与S不一定是不同的关系</li></ul></li></ul></li><li>用户定义完整性<ul><li>域完整性 或 语义完整性</li><li>针对 <u>某一具体应用领域</u> 定义的数据约束条件</li><li>反应某一具体应用所涉及的数据必须满足应用语义的要求</li><li>指明关系中 <u>属性的取值范围</u>，防止 <u>属性的值与应用语义矛盾</u></li></ul></li></ul></li></ul><h3 id="5-基本术语"><a href="#5-基本术语" class="headerlink" title="5. 基本术语"></a>5. 基本术语</h3><ul><li><p>关系： 关系就是二维表，二维表的名字就是关系的名字</p></li><li><p>属性：二维表中的每个列就称为一个属性（字段）</p><ul><li>属性名</li><li>属性值（某一列的值）</li><li>列的个数（关系的元数）。一个二维表有n列，则称其为n元关系</li></ul></li><li><p>值域：二维表中属性的取值范围称为值域</p></li><li><p>分量：元组中的每一个属性值称为元组的一个分量</p><ul><li><p>n元关系的每个元组有n个分量</p></li><li><p>例：</p><ul><li>（0811101，李勇，21，男，计算机系），有5个分量</li></ul></li></ul></li><li><p>关系模式</p><ul><li>关系模式： 二维表的结构</li><li>设由关系名为R， 属性分别为 A1，A2……则关系模式为：<ul><li>R（A1，A2，…,An）</li></ul></li><li>如果将关系模式理解为 <u>数据类型</u>，则 <u>关系</u> 就是该 <u>数据类型的一个具体值</u>。</li></ul></li><li><p>关系数据库：</p><ul><li>一个 <u>关系数据库</u> 的 <u>所有关系的集合</u> </li></ul></li><li><p>候选键</p><ul><li>一个属性或属性集的值能唯一标识一个关系的元组儿不包含多余的属性，则称该属性或属性集为候选键</li></ul></li><li><p>主键</p><ul><li>当一个关系中 <u>有多个候选键</u> 时，从中选一个作为主键<ul><li>每个关系只能有一个主键或主关键字，用于唯一地确定一个元组</li><li>主键可以由一个属性组成，也可以由多个属性组成</li></ul></li><li>主属性：包含在任一候选键中的 <u>属性称为主属性</u></li><li>非主属性：不包含。。</li><li>作用：<ul><li>表中定义了 <u>主键</u> 时，<u>数据库管理系统</u> 会 自动保证数据的 <u>实体完整性</u>，也即 保证不允许存在主键值 <u>为空</u> 的记录 以及 <u>主键值重复的记录</u></li><li><u>空值</u> 是特殊的 <u>标量常数</u>， 代表 <u>未定义</u>的或者有意义但目前还处于 <u>未知状态的值</u>。</li></ul></li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527200629251.png" alt="image-20210527200629251"></p></li><li><p>对关系的限定：</p><ul><li>关系中每个分量都是 <u>不可再分的最小属性</u></li><li>表中列的数据类型是固定的</li><li>不同列的数据可以取自相同值域</li><li>关系表中 <u>行、列的顺序不重要</u></li><li>同一关系中的元组不能重复</li></ul></li></ul><h2 id="第四章-（Sql语言基础）"><a href="#第四章-（Sql语言基础）" class="headerlink" title="第四章 （Sql语言基础）"></a>第四章 （Sql语言基础）</h2><h3 id="1-功能概述："><a href="#1-功能概述：" class="headerlink" title="1. 功能概述："></a>1. 功能概述：</h3><ul><li>四部分：<ul><li>数据 <u>定义</u> 功能、 create、drop、alter</li><li>数据 <u>控制</u> 功能、grant、 revoke、deny</li><li>数据 <u>查询</u> 功能 、select </li><li>数据 <u>操纵</u> 功能、insert、update、delete</li></ul></li></ul><h3 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h3><ul><li>数值型<ul><li>准确型：在计算机中能精确存储的数据<ul><li>整数： Bigint 8、Int 4、Smallint 2、Tinyint 1、Bit （1位)</li><li>小数：numeric、decimal（p[数字位长度]、q[小数位长度]）</li></ul></li></ul></li><li>字符串型<ul><li>字符串类型由 <u>汉字</u>、<u>英文字母</u>、<u>数字和各种符号组成</u></li><li>编码方式<ul><li>二进制字符串类型</li><li>普通编码字符串类型</li><li>统一字符编码字符串类型（Unicode）</li><li>Char（8000） 定长存储</li><li>Varchar（8000） 不定长存储</li><li>Varchar(max)存储大于8000字节文本</li><li>nchar（4000）定长存储</li><li>nvarchar（4000）不定长存储</li><li>Nvarchar（max）…</li><li>所有语言中存在的字符均采用 <u>双字节编码</u></li></ul></li></ul></li><li>日期时间类型<ul><li>Datetime 8      年月日时分秒毫秒     <strong>2001/08/03 10:30:00.000</strong><ul><li>存储从1735.1.1 - 9999.12.31</li></ul></li><li>SmallDateTime 4      年月日时分      <strong>2001/08/03 10:30:00</strong><ul><li>存储从1900.1.1 - 2079.6.6</li></ul></li><li>Date 3 定义一个日期，范围为0001-01-01，默认格式：YYYY-MM-DD</li><li>Time 3~5 定义一天中的某个时间<ul><li>默认格式：hh：mm：ss[.0000000]</li><li>范围: 00:00:00.0000000到23:59:59:9999999</li></ul></li></ul></li></ul><h3 id="3-基本概念"><a href="#3-基本概念" class="headerlink" title="3. 基本概念"></a>3. 基本概念</h3><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527204951125.png" alt="image-20210527204951125"></p><ul><li><p>基本表</p><ul><li>本身独立存在的表</li><li>Sql中一个关系就对应一个基本表</li><li>一个（多个）基本表对应一个存储文件</li><li>一个表可以带若干索引</li></ul></li><li><p>存储文件</p><ul><li><u>逻辑结构</u> 组成了关系数据库的 <u>内模式</u></li><li><u>物理结构</u> 对用户是隐蔽的</li></ul></li><li><p>视图</p><ul><li>从一个或几个基本表导出的表</li><li>数据库中只存放视图的定义而不存放视图对应的数据</li><li>视图是一个虚表</li><li>用户可以在视图上再定义视图</li></ul></li></ul><h3 id="4-数据定义"><a href="#4-数据定义" class="headerlink" title="4. 数据定义"></a>4. 数据定义</h3><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527205430823.png" alt="image-20210527205430823"></p><ul><li><p>架构的基本概念</p><ul><li><p>架构（schema，也称为模式），数据库下的一个 <u>逻辑命名空间</u></p></li><li><p>可以存放 <u>表</u>、<u>视图</u> 等数据库对象</p></li><li><p><u>一个数据库对象的容器</u></p></li><li><p>数据库比喻为操作系统，架构为其目录，架构中对象相当于文件</p></li><li><p>如果没有指定架构名，架构名隐含为用户名</p></li><li><p>一个用户可以拥有多个架构</p></li><li><p>执行创建架构语句（ <strong>CREATE SCHEMA [&lt;架构名&gt;]</strong> </p><pre><code>**AUTHORIZATION &lt;用户名&gt;**）</code></pre><p>需要管理员权限或<strong>CREATE SCHEMA</strong>权限</p></li><li><p><strong>DROP SCHEMA &lt;</strong>架构名<strong>&gt;</strong> </p><pre><code>**&#123; &lt;CASCADE&gt; | &lt;RESTRICT&gt; &#125;**</code></pre><ul><li>CASCADE：删除架构的同时将该架构中所有的对象一起删除。</li><li>RESTRICT：如果被删除的架构中包含对象，则拒绝删除此架构</li></ul></li></ul></li><li><p>基本表</p></li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527210120188.png" alt="image-20210527210120188"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527210143549.png" alt="image-20210527210143549"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527210204409.png" alt="image-20210527210204409"></p><h2 id="第六章-索引和视图"><a href="#第六章-索引和视图" class="headerlink" title="第六章  (索引和视图)"></a>第六章  (索引和视图)</h2><h3 id="1-索引的存储结构与分类"><a href="#1-索引的存储结构与分类" class="headerlink" title="1. 索引的存储结构与分类"></a>1. 索引的存储结构与分类</h3><ul><li>聚集索引<ul><li>将数据按照索引项的顺序进行物理排序</li><li>B+树按照 <u>自下而上</u>建立,最下层的叶级节点存放数据,它同时页是数据页</li><li>多个 <em>数据页</em> 生成一个中间层节点的索引页,然后再由多个中间层节点的索引页合成更上层的索引页</li><li>如此上推,直到生成顶层跟节点的 <em>索引页</em></li><li>在聚集索引的叶节点中，数据按聚集索引项的值进行物理排序</li><li>因此，聚集索引很类似于电话号码簿</li><li>一个表只能包含一个聚集索引,一个索引可以由多个列组成</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527211635300.png" alt="image-20210527211635300"></li></ul></li><li>非聚集索引<ul><li>不对数据物理排序</li><li>非聚集索引与图书后边的术语表类似。数据存储在一个地方，术语表存储在另一个地方。而且数据并不按术语表的顺序存放，但术语表中的每个词在书中都有确切的位置</li><li>非聚集索引就类似于术语表，而数据就类似于一本书的内容</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527211948237.png" alt="image-20210527211948237"></li></ul></li><li>相同点:<ul><li>都使用 <u>B+</u>树结构存储索引项</li><li>包含数据页和索引页</li><li>索引页用来存放索引项和指向下一层的指针</li></ul></li><li>非聚类索引和聚类索引的不同点<ul><li>数据 <u>不按非聚集索引</u> 关键字值 的 顺序 <u>排序和存储</u></li><li>叶级节点不是存放数据的数据页</li><li>非聚集索引B+树的 <u>叶级节点是</u> <u>索引行</u>。每个索引行包含非聚集索引关键字值以及一个或多个行定位器，这些行定位器指向该关键字值对应的数据行（如果索引不唯一，则可能是多行）</li></ul></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210527211843045.png" alt="image-20210527211843045" style="zoom:40%;" /></li></ul><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210527212159743.png" alt="image-20210527212159743 " style="zoom:40%;" /><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210527212223339.png" alt="image-20210527212223339 " style="zoom:40%;" /><h3 id="2-创建索引"><a href="#2-创建索引" class="headerlink" title="2. 创建索引"></a>2. 创建索引</h3><ul><li><p>CREATE [UNIQUE] [CLUSTERED|NONCLUSTERED]</p><p> <strong>INDEX</strong> <strong>索引名</strong> <strong>ON</strong> 表名(列名 <strong>[,…n])</strong></p></li><li><p>UNIQUE:唯一索引</p></li><li><p>CLUSTERED:聚类索引</p></li><li><p>NONCLUSTERED:非</p></li><li><p>默认非聚类</p></li><li><p>删除:<br> DROP INDEX &lt;表名&gt;.&lt;索引名&gt;</p></li></ul><h3 id="3-视图"><a href="#3-视图" class="headerlink" title="3. 视图"></a>3. 视图</h3><ul><li>视图是由 <u>从数据库的基本表</u> 中选取出来的 <u>数据</u> 组成的 <u>逻辑窗口</u>，</li><li>是 <u>基本表的部分行和列数据的组合</u>。</li><li>视图是一个 <u>虚表</u>。</li><li>数据库中只存储 <u>视图的定义</u>，而 <u>不存储</u> 视图所包含的 <u>数据</u>。</li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527212852513.png" alt="image-20210527212852513"></p><ul><li><p>定义视图 </p><p> CREATE VIEW &lt;视图名&gt;[(视图列名表)]</p><pre><code>AS  查询语句</code></pre><ul><li>查询语句通常不包括:<ul><li>order by 和 distinct</li></ul></li><li>在定义视图时要么指定视图的全部列名，要么全部省略不写</li><li>视图的数据源可以来自其它的视图。</li></ul></li><li><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213129400.png" alt="image-20210527213129400"></p></li><li><p>对视图的查询如同基本表</p></li><li><p>可以通过视图修改基本表中的数据</p><ul><li><p>并不是所有的视图都可以用于修改数据。</p><ul><li>如经过统计或表达式计算得到的视图</li></ul></li><li><p>能否通过视图修改数据的基本原则：</p><ul><li>这个操作能够最终落实到基本表上，并成为对基本表的正确操作，则可以</li></ul></li><li><p>有些复杂的查询，特别是统计函数和普通列一起进行的查询，在一个查询语句中是无法实现的，这时可以借助视图通过分步骤的方法来实现。</p></li></ul></li><li><p>修改和删除视图</p><ul><li>修改:<ul><li>ALTER VIEW  &lt;视图名&gt;<br>  [ ( &lt;列名&gt; [ ,…n ] ) ]<br>AS<br>   SELECT语句</li></ul></li><li>删除<ul><li>DROP VIEW &lt;视图名&gt;</li></ul></li></ul></li><li><p>视图的作用:</p><ul><li>简化数据查询语句  </li><li>使用户能从多角度看待同一数据 </li><li>提高了数据的安全性 </li><li>提供了一定程度的逻辑独立性 </li></ul></li></ul><h3 id="4-触发器"><a href="#4-触发器" class="headerlink" title="4. 触发器"></a>4. 触发器</h3><ul><li>是一段由对数据的更改操作引发的自动执行的代码。更改操作包括：UPDATE、INSERT、DELETE<br>通常用于保证业务规则和数据完整性<br>主要优点是用户可以用编程的方法实现复杂的处理逻辑和商业规则，增强了数据完整性约束的功能</li><li>创建:<br><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213722047.png" alt="image-20210527213722047"></li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213745458.png" alt="image-20210527213745458"></li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213802580.png" alt="image-20210527213802580"></li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213821615.png" alt="image-20210527213821615"></li><li>删除触发器:<br>DROP TRIGGER 触发器名</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210527213859712.png" alt="image-20210527213859712"></li></ul><h2 id="第八章-关系规范化"><a href="#第八章-关系规范化" class="headerlink" title="第八章 (关系规范化)"></a>第八章 (关系规范化)</h2><h3 id="1-数据依赖"><a href="#1-数据依赖" class="headerlink" title="1. 数据依赖"></a>1. 数据依赖</h3><ul><li>数据表中数据的问题：<ul><li>数据冗余</li><li>数据更新</li><li>数据插入</li><li>数据删除</li></ul></li><li>结论：<ul><li>S-L-C 关系模式不是一个好模式</li><li>解决方案：<br>模式分解：把一个 <u>关系模式</u> 分解为两个或多个关系模式， 分解过程中消除 “不良”函数依赖</li></ul></li></ul><h3 id="2-范式"><a href="#2-范式" class="headerlink" title="2. 范式"></a>2. 范式</h3><ul><li><p>关系规范化：  将“不良”函数依赖的关系模式转换为良好的关系模式的 理论</p></li><li><p>范式： （关系模式遵守的规则）</p><ul><li><p>关系数据库中关系需满足一定要求，满足不同程度要求的为不同的 <u>范式</u></p></li><li><p>第一 ~ 五 范式（1~5 NF（Normal Form））BC范式</p></li><li><p>范式间关系：<br><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210601205544678.png" alt="image-20210601205544678"></p></li><li><p>1NF：</p><ul><li>不包含非原子项属性的关系</li></ul></li><li><p>2BF：</p><ul><li>定义  如果R(U,F)∈1NF，且R中的 <u>每个非主属性都完全函数依赖于主键</u>， 则R(U,F)∈2NF。</li><li>可知：若某个第一范式关系的主键只由一个列组成，则这个关系就是第二范式关系。</li><li>分解方法：<ul><li>（1）用 <u>组成主键的属性集合</u> 的每一个 <u>子集</u> 作为 <u>主键</u> 构成的一个关系</li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601210109950.png" alt="image-20210601210109950 " style="zoom:50%;" /></li><li>（2）将 依赖于这些 <u>主键的属性</u> 放置到 <u>相应的关系</u> 中</li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601210136010.png" alt="image-20210601210136010" style="zoom:50%;" /></li><li>（3）最后 <u>去掉只由 主键的子集 构成的关系</u></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601210150684.png" alt="image-20210601210150684 " style="zoom:50%;" /></li></ul></li></ul></li><li><p>3BF:</p><ul><li><p>定义:如果R(U,F )∈2NF，且 <u>所有非主属性</u> 都 <u>不传递依赖于主键</u> ，则R(U,F )∈3NF。</p></li><li><p>S-L(Sno,Sname,Ssex,Sdept,SLOC) ∵Sno→Sdept，Sdept→Sloc </p><p>∴有Sno   –&gt;(传递)  SLOC,</p></li><li><p>分解方法：</p><ul><li>对于不是 <u>候选码</u> 的每个 <u>决定因子</u>，从关系模式中 <u>删去</u> 依赖于它的 <u>所有属性</u></li><li>新建一个关系模式， 新关系模式 中 <u>包含</u> 原关系模式 中 <u>所有</u> 依赖于 <u>该决定因子</u> 的 <u>属性</u></li><li>将决定因子作为新关系模式的主键</li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601211546539.png" alt="image-20210601211546539" style="zoom:50%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601211603811.png" alt="image-20210601211603811 " style="zoom:50%;" /></li></ul></li></ul></li><li><p>BC（Boyce-Codd） NF：</p><ul><li><p>第二范式和第三范式都是不允许存在对主键的部分依赖和传递依赖，并没有考虑对候选键的依赖问题。</p></li><li><p>如果只考虑对主键属性的依赖关系，则第三范式关系有可能存在会引起</p><p><u>数据冗余的函数依赖</u></p></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601211818343.png" alt="image-20210601211818343" style="zoom:50%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210601211845524.png" alt="image-20210601211845524" style="zoom:50%;" /></li></ul></li></ul></li><li><p>规范化小结：</p><ul><li>规范化的基本思想：<ul><li>逐步消除数据依赖中不合适的部分，通过模式分解的方法使关系模式逐步消除操作异常。</li></ul></li><li>分解的基本思想：<ul><li>是让一个关系模式只描述一件事情，即面向主题设计数据库的关系模式。因此，规范化的过程就是让每个关系模式概念单一化的过程。</li></ul></li><li>规范化的方法：<ul><li>是模式分解，且确保分解后产生的模式与原模式等价。</li></ul></li></ul></li></ul><h3 id="3-关系模式分解准则"><a href="#3-关系模式分解准则" class="headerlink" title="3. 关系模式分解准则"></a>3. 关系模式分解准则</h3><ul><li>模式分解应该满足<ul><li>模式分解具有无损连接性</li><li>模式分解能保证函数依赖</li></ul></li></ul><h2 id="第九章-数据库设计"><a href="#第九章-数据库设计" class="headerlink" title="第九章 数据库设计"></a>第九章 数据库设计</h2><h3 id="1-数据库设计特点"><a href="#1-数据库设计特点" class="headerlink" title="1. 数据库设计特点"></a>1. 数据库设计特点</h3><ul><li>基本步骤：<ul><li>需求分析</li><li>结构设计</li><li>行为设计</li><li>数据库实施</li><li>数据库运行和维护</li></ul></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602203940633.png" alt="image-20210602203940633" style="zoom:80%;" /></li><li>局部E-R图设计：<ul><li>实体 和 属性 是 <u>相对</u> 而言的，需要根据实际情况进行调整</li><li>关系数据库 <u>基本原则</u>：<ul><li>实体具有描述信息， 属性没有</li></ul></li></ul></li><li>设计示例：<ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602205533374.png" alt="image-20210602205533374" style="zoom:80%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602205556900.png" alt="image-20210602205556900" style="zoom:80%;" /><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210602205645320.png" alt="image-20210602205645320"></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602205645320.png" alt="image-20210602205645320" style="zoom:80%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602205828263.png" alt="image-20210602205828263" style="zoom:80%;" /></li></ul></li><li>设计全局E-R模型<ul><li>将局部E-R图集转为全局</li><li>需消除各分E-R图合并时产生的冲突<ul><li>属性：<ul><li>属性域冲突（类型、取值范围、取值集合）<ul><li>部门编号 （字符 - 数值）</li><li>年龄描述 （定义为出生日期 - 定义为整数）</li></ul></li><li>属性取值单位冲突：<ul><li>身高，有的用m 有的用 cm</li></ul></li></ul></li><li>命名<ul><li>同名异义：<ul><li>不同实体名、联系名、属性名在不同的局部E-R图中有相同的名字</li></ul></li><li>异名同义：<ul><li>相同实体名、联系名、属性名在不同的局部E-R图中有不同的名字</li></ul></li><li>属性冲突和命名冲突通常可用通过讨论、协商解决</li></ul></li><li>结构<ul><li>同一对象在不同局部E-R图中有不同的抽象<ul><li>把属性和实体相互转换，是同样对象具有相同抽象</li></ul></li><li>统一实体在不同的局部E-R图中所包含的属性个数不完全相同<ul><li>solve：取并集</li></ul></li></ul></li><li><strong>find_example:  p300</strong></li></ul></li></ul></li></ul><h3 id="2-逻辑结构设计"><a href="#2-逻辑结构设计" class="headerlink" title="2. 逻辑结构设计"></a>2. 逻辑结构设计</h3><ul><li>把概念结构设计阶段设计好的E-R模型转换为具体的数据库管理系统支持的数据模型，这些模式在功能、性能、完整性和一致性约束方面满足应用要求。</li><li>步骤：<ul><li>将概念模型转换为某种逻辑数据模型</li><li>对数据模型进行优化</li></ul></li><li>E-R模型向关系模型的转换：<ul><li>一个实体转换为一个关系模式。实体的属性就是关系的属性，实体的标识符就是关系的码。</li><li>实体间联系分情况处理<ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211129285.png" alt="image-20210602211129285" style="zoom:67%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211200365.png" alt="image-20210602211200365" style="zoom:67%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211217225.png" alt="image-20210602211217225" style="zoom:67%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211233985.png" alt="image-20210602211233985" style="zoom:67%;" /><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210602211247210.png" alt="image-20210602211247210"></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211247210.png" alt="image-20210602211247210" style="zoom:67%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211325021.png" alt="image-20210602211325021" style="zoom:67%;" /></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211348608.png" alt="image-20210602211348608" style="zoom:67%;" /></li></ul></li></ul></li></ul><h2 id="第十章-安全管理"><a href="#第十章-安全管理" class="headerlink" title="第十章 安全管理"></a>第十章 安全管理</h2><h3 id="1-安全控制"><a href="#1-安全控制" class="headerlink" title="1. 安全控制"></a>1. 安全控制</h3><ul><li><p>安全控制：</p><ul><li>在数据库应用系统中不同层次提供对有意损害行为的安全防范</li></ul></li><li><p>安全控制模型：</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210602211616781.png" alt="image-20210602211616781"></p></li><li><p>授权和认证：</p><ul><li>授权：<ul><li>将合法访问数据库或数据库对象的权限授予用户的过程</li></ul></li><li>认证：<ul><li>一种鉴定用户身份的机制。即认证是检验用户实际是否被准许操作数据库</li></ul></li><li>认证最简单的形式：<ul><li>与数据库连接时提供用户名和密码</li></ul></li></ul></li><li><p>语句权限：</p><ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211908020.png" alt="image-20210602211908020" style="zoom:67%;" /></li></ul></li><li><p>对象权限：</p><ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602211939984.png" alt="image-20210602211939984" style="zoom:67%;" /></li><li><p>授权语句：</p><ul><li><p><strong>GRANT</strong> <strong>对象权限名</strong> <strong>[ , … ]</strong> </p><p> <strong>ON {</strong>表名 <strong>|</strong> <strong>视图名</strong> <strong>|</strong> <strong>存储过程名</strong>}</p><p> <strong>TO</strong> <strong>数据库用户名</strong> <strong>[ , … ]</strong></p><p> <strong>[WITH GRANT OPTION]</strong></p></li><li><p>例子： p319</p></li><li><p>（收权语句）</p><p><strong>REVOKE</strong> <strong>对象权限名</strong> <strong>[ , … ]</strong> </p><p> <strong>ON {</strong> <strong>表名</strong> <strong>|</strong> <strong>视图名</strong> <strong>|</strong> <strong>存储过程名</strong> <strong>}</strong></p><p> <strong>FROM</strong> <strong>数据库用户名</strong>[ , … ]</p></li><li><p>（拒绝语句）</p><p><strong>DENY</strong> <strong>对象权限名</strong> <strong>[, … ]</strong> </p><p> <strong>ON {</strong>表名 <strong>|</strong> <strong>视图名</strong> <strong>|</strong> <strong>存储过程名</strong>}</p><p> <strong>TO</strong> <strong>数据库用户名</strong> <strong>[ , … ]</strong></p></li></ul></li></ul></li></ul><h3 id="2-审计跟踪"><a href="#2-审计跟踪" class="headerlink" title="2. 审计跟踪"></a>2. 审计跟踪</h3><ul><li>审计跟踪实质上是一种特殊的文件或数据库，系统在上面自动记录下用户对常规数据的所有操作。</li><li>它记录对数据库的所有修改（如更新、删除、插入等）日志，包括何时由何人修改等信息。</li></ul><h3 id="3-SQL-Server安全控制"><a href="#3-SQL-Server安全控制" class="headerlink" title="3. SQL Server安全控制"></a>3. SQL Server安全控制</h3><ul><li><p>大型DBMS自主存取控制模式中，用户访问数据库数据需要经过</p><p>三个 <u>安全认证过程</u></p><ul><li>确认用户是否是 <u>数据库服务器</u> 的合法用户（登录名）</li><li>确认用户是否是要访问 <u>数据库</u> 的合法用户（数据库用户）</li><li>确认用户是否具有合适操作权限（权限认证）</li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210602213219273.png" alt="image-20210602213219273"></p></li></ul><h3 id="4-登录名"><a href="#4-登录名" class="headerlink" title="4. 登录名"></a>4. 登录名</h3><ul><li>SQL Server 2008的安全权限是基于标识用户身份的登录标识符（Login ID，登录ID），登录ID就是控制访问SQL Server 数据库服务器的登录名。</li><li><strong>SQL Server 2008</strong>支持两类登录名 ：<ul><li>由SQL Server负责验证的登录名</li><li>Windows网络账户，可以是组用户</li></ul></li><li><strong>SQL Server 2008</strong>提供了两种身份验证模式<ul><li>Windows身份验证模式<ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602213510631.png" alt="image-20210602213510631" style="zoom:80%;" /></li></ul></li><li>混合验证模式<ul><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210602213533681.png" alt="image-20210602213533681" style="zoom:80%;" /></li></ul></li></ul></li></ul><h2 id="第十一章-事务与并发控制"><a href="#第十一章-事务与并发控制" class="headerlink" title="第十一章 事务与并发控制"></a>第十一章 事务与并发控制</h2><h3 id="1-事物基本概念"><a href="#1-事物基本概念" class="headerlink" title="1. 事物基本概念"></a>1. 事物基本概念</h3><ul><li>事务是 用户定义的数据操作系列，这些操作作为一个完整的工作单元，一个事务内 的所有语句被作为一个整体，要么全部执行，要么全部不执行。</li><li>例如：对于一个转帐活动：A帐户转帐给B帐户2000元钱，这个活动包含两个操作：<ul><li>第一个：A - 2000</li><li>第二个：B - 2000</li></ul></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210603090630150.png" alt="image-20210603090630150" style="zoom:80%;" /></li></ul><h3 id="2-事务的特性"><a href="#2-事务的特性" class="headerlink" title="2. 事务的特性"></a>2. 事务的特性</h3><ul><li><p>原子性：</p><ul><li><p>指事务是数据库的 <u>逻辑工作单位</u>，</p><p>事务中的操作 <u>要么都做</u>，<u>要么多不做</u></p></li><li><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603091211903.png" alt="image-20210603091211903"></p></li></ul></li><li><p>一致性： </p><ul><li>指事务执行的结果必须时使数据库从一个一致性状态变到另一个一致性状态</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603091230551.png" alt="image-20210603091230551"></li></ul></li><li><p>隔离性：</p><ul><li>指数据库中一个事务的执行 <u>不能被</u> 其它事务 <u>干扰</u></li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603091249659.png" alt="image-20210603091249659"></li></ul></li><li><p>持久性： </p><ul><li>指事务 <u>一旦提交</u>，其对数据库 <u>数据的改变是永久的</u></li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603091307558.png" alt="image-20210603091307558"></li></ul></li><li><p>事务时数据库并发控制和恢复的基本单位</p></li><li><p>保证事务的ACID特性时事务处理的重要任务</p></li><li><p>ACID特性可能遭到破坏和因素有：</p><ul><li>多个事务并行运行时，不同事务的操作有交叉情况</li><li>事务在运行过程中被强迫停止</li></ul></li></ul><h3 id="3-事务处理模型"><a href="#3-事务处理模型" class="headerlink" title="3. 事务处理模型"></a>3. 事务处理模型</h3><ul><li><p>COMMIT和ROLLBACK用于提供对事物的支持</p></li><li><p>当开始一个事务后，系统必须连续的执行全部后续SQL语句，直到出现下列四个事件之一：</p><ul><li>到达了COMMIT语句</li><li>到达了ROLLBACK语句</li><li>成功地到达了程序的结束</li><li>程序被异常终止了</li></ul></li><li><p>T-SQL事务处理模型</p><ul><li><p>每个事务都有显式的开始和结束标记</p></li><li><p>事务开始标记：</p><p>​    <strong>BEGIN TRANSACTION | TRAN</strong></p><p><strong>BEGIN TRANSACTION</strong> </p><p><strong>UPDATE</strong> <strong>支付表</strong> <strong>SET</strong> <strong>帐户总额</strong>=<strong>帐户总额</strong> <strong>- 2000</strong></p><pre><code>**WHERE** **帐户号** **= ‘A’**</code></pre><p><strong>UPDATE</strong> <strong>支付表</strong> <strong>SET</strong> <strong>帐户总额</strong>=<strong>帐户总额</strong> <strong>+ 2000</strong></p><p>​     <strong>WHERE</strong> <strong>帐户号</strong> <strong>= ‘B’</strong></p><p><strong>COMMIT</strong> </p></li></ul></li></ul><h3 id="4-事务日志"><a href="#4-事务日志" class="headerlink" title="4. 事务日志"></a>4. 事务日志</h3><ul><li><p>为支持事务处理，DBMS对数据库所做的每个更改操作都维护一个事务记录，并保存到事务日志中</p></li><li><p>DBMS用事务日志来跟踪所有影响数据库值的操作，以使DBMS能够从由事务引起的失败中恢复数据库</p></li><li><p>当执行有更改数据库操作的事务时，DBMS自动更改事务日志，并在事务日志中存储数据库被更改之前和更改之后的数据，以及所有参与到事务中的表、行和属性值。</p></li><li><p>事务的开始和结束（COMMIT）也记录在事务日志中。</p></li><li><img src="C:\Users\25357\AppData\Roaming\Typora\typora-user-images\image-20210603092421356.png" alt="image-20210603092421356" style="zoom:67%;" /></li></ul><h3 id="5-并发控制"><a href="#5-并发控制" class="headerlink" title="5. 并发控制"></a>5. 并发控制</h3><ul><li><p>概述：<br><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603092519371.png" alt="image-20210603092519371"></p></li><li><p>并发操作所带来的数据不一致情况大致为四种：</p><ul><li>丢失修改<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603092718772.png" alt="image-20210603092718772"></li></ul></li><li>不可重复读<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603092735972.png" alt="image-20210603092735972"></li></ul></li><li>读“脏”数据<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603092755439.png" alt="image-20210603092755439"></li></ul></li><li>产生“幽灵”数据<ul><li>属于不可重复读的范畴</li><li>指事务T1按一定条件从数据库种读取了某些数据记录后，事物T2删除了其中的部分记录，或者在其中添加了部分记录当T1再次按照相同条件读数据时，发现其中少了（对删除）或者多了（对插入）一些记录</li><li>这样的数据对T1拉手就是“幽灵”数据或称“幻影”数据</li></ul></li></ul></li><li><p>并发控制种的加锁：</p><ul><li><p>进行并发控制的主要方式时使用封锁机制，即加锁</p></li><li><p>锁时与数据项有关的一个变量，它描述了数据项的状态，这个状态时关于在数据项上课进行的操作</p></li><li><p>并发控制最常用技术——加锁</p></li><li><p>锁的类型：</p><ul><li>排他锁（X锁、写锁）<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603093338564.png" alt="image-20210603093338564"></li></ul></li><li>共享锁（S锁、读锁）<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603093355331.png" alt="image-20210603093355331"></li></ul></li><li>锁的相容性矩阵：<ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603093441133.png" alt="image-20210603093441133"></li></ul></li></ul></li><li><p>锁的粒度：</p><ul><li>粒度：由并发控制程序选择的作为保护单位的数据项大小。</li><li>主要的加锁粒度：<ul><li>数据库级： 对整个数据库加锁</li><li>表级：对整张表加锁</li><li>页级（最常用）：对以恶数据页加锁</li><li>行（元组）级：对特定的行加锁</li><li>属性（字段）级：对特定的属性加锁</li></ul></li></ul></li><li><p>封锁协议：</p><ul><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210603094334305.png" alt="image-20210603094334305"></li></ul></li><li><p>一级封锁协议</p><ul><li><p>对事物T要修改的数据加X锁，直到事物结束（包括正常和非正常结束）时才释放</p></li><li><p>一级封锁协议可以防止丢失修改，并保证事物T时可恢复的</p></li><li><p>但不能保证课重复度和不读”脏“数据</p></li><li><p>示例：</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214218341.png" alt="image-20210606214218341"></p></li></ul></li><li><p>二级封锁协议</p><ul><li><p>一级封锁协议加上对事物T对要读取的数据加S锁，读完后即释放S锁</p></li><li><p>还可防止读”脏“数据</p></li><li><p>示例</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214427915.png" alt="image-20210606214427915"></p></li></ul></li><li><p>三级封锁协议</p><ul><li>以及封锁协议加上事物T对要读取的数据加S锁，并直到事物结束才释放。</li><li>还可以防止不可重复读</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214637602.png" alt="image-20210606214637602"></li></ul></li><li><p>总结：</p></li><li><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214657107.png" alt="image-20210606214657107"></p></li><li><p>活锁和死锁</p><ul><li>和操作系统一样，并发控制的封锁方法可能导致活锁和死锁</li><li>活锁</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214950477.png" alt="image-20210606214950477"></li><li>避免活锁<ul><li>采用先来先服务策略</li><li>当多个事务请求封锁同一数据对象时，数据库管理系统按先请求先满足的事务排队策略，当数据对象上的锁被释放后，让事务队列中第一个事务获得锁</li></ul></li><li>死锁</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606215825457.png" alt="image-20210606215825457"></li><li>预防死锁<ul><li>一次封锁法</li><li>顺序封锁法</li></ul></li><li>死锁的诊断与解除<ul><li>超时法</li><li>事务等待图法</li></ul></li></ul></li></ul></li><li><p>两阶段锁</p><ul><li>DBMS对并发事务中的操作的调度时随机的</li><li>如果多个事务在某个调度下的执行结果与这些事务在某个串行调度下的执行结果相同，那么这个调度就颐堤港是正确的</li><li>两阶段锁中，所有的加锁操作都在第一个解锁操作之前完成</li><li>两阶段锁是用于维护级别3一致性使用的标准协议</li><li>两阶段锁定义了事务如何获取和释放锁，基本的规则就是在事务已经释放了锁之后就不能再获得任何其他的锁</li><li><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606221940620.png" alt="image-20210606221940620"></li></ul></li></ul><h2 id="第十二章-数据库恢复技术"><a href="#第十二章-数据库恢复技术" class="headerlink" title="第十二章 数据库恢复技术"></a>第十二章 数据库恢复技术</h2><h3 id="1-恢复的基本概念"><a href="#1-恢复的基本概念" class="headerlink" title="1. 恢复的基本概念"></a>1. 恢复的基本概念</h3><ul><li>数据库恢复是指当数据库发生故障时，将数据库恢复到正确（一致性）状态的过程。</li><li>数据库恢复时基于事务的原子性</li><li>数据恢复过程通常遵循一个可预测方案</li><li>恢复机制由两个关键问题：<ul><li>如何建立备份数据</li><li>如何利用备份数据进行恢复</li></ul></li></ul><h3 id="2-数据转储"><a href="#2-数据转储" class="headerlink" title="2. 数据转储"></a>2. 数据转储</h3><ul><li>数据库恢复采用的基本技术：数据转储（也称为数据库备份）。</li><li>转储就是定期地将整个数据库复制到辅助存储设备上，比如磁带、磁盘。</li><li>数据转储只能将数据库恢复到转储时的状态。如果想恢复到故障发生时的状态，则必须利用转储之后的事务日志。</li><li>静态转储<ul><li>再系统中无运行事务时进行</li><li>再转储期间不允许对数据库进行任何操作</li></ul></li><li>动态转储<ul><li>不用等在正在运行的事务结束</li><li>再转储期间允许运行新的事物</li></ul></li></ul><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606222446078.png" alt="image-20210606222446078"></p><h3 id="3-数据库故障种类"><a href="#3-数据库故障种类" class="headerlink" title="3. 数据库故障种类"></a>3. 数据库故障种类</h3><ul><li><p>数据库故障是指导致数据库值出现错误描述状态的情况</p></li><li><p>事务故障</p><ul><li>意味着事务没有到达终点，数据库可能正处于不正确状态</li><li>数据库的恢复机制要再不影响其他事务运行的情况下，强行撤销该事务中的全部操作</li><li>——&gt; 事务撤销</li></ul></li><li><p>影响数据库运行的故障有多种</p><ul><li><p>事物内部的故障</p><ul><li><p>可预期的</p><ul><li>这类故障可通过事物程序本身发现</li><li>如银行转账事物中，如A账户金额不足，则不能进行转账</li></ul></li><li><p>非预期的</p><ul><li><p>这类故障不能由应用程序处理</p></li><li><p>如运算溢出或因死锁二被撤销的事务</p></li></ul></li></ul></li></ul></li></ul><ul><li><p>系统故障</p><ul><li><p>造成系统停止运转、系统要重启的故障：</p><ul><li>硬件错误（CPU故障）</li><li>操作系统故障</li><li>突然停电</li></ul></li><li><p>这类故障会影响正在运行的所有事务，但不会破坏数据库</p></li><li><p>产生的结果：</p><ul><li>一些未完成事务的结果可能已经送入物理数据库中，从而造成数据库可能处于不正确状态</li><li>有些已经提交的事务可能有一部分结果还保留在缓冲区中，尚未写到物理数据库中，因此会丢失这些事务对数据的修改，使数据库处于不一致状态</li></ul></li><li><p>恢复方法</p><ul><li>恢复子系统在系统重新启动时必须：<ul><li>撤销所有未完成的事务</li><li>重做所有已提交的事务</li></ul></li><li>从而保证将数据库恢复到一致状态</li></ul></li><li><p>故障对数据库的影响：</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607090622273.png" alt="image-20210607090622273"></p></li></ul></li><li><p>其他故障</p></li></ul><h3 id="4-数据库恢复的类型"><a href="#4-数据库恢复的类型" class="headerlink" title="4. 数据库恢复的类型"></a>4. 数据库恢复的类型</h3><ul><li><p>无论出现何种类型的故障，都必须终止或提交事务，以维护数据完整性</p></li><li><p>事务恢复类型：</p><ul><li><p>向前恢复</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607091932816.png" alt="image-20210607091932816"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607091953948.png" alt="image-20210607091953948"></p><p>重做事务：</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092013887.png" alt="image-20210607092013887"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092028162.png" alt="image-20210607092028162"></p></li><li><p>向后恢复</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092044451.png" alt="image-20210607092044451"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092056267.png" alt="image-20210607092056267"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092108372.png" alt="image-20210607092108372"></p></li></ul></li><li><p>介质故障恢复</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607092138104.png" alt="image-20210607092138104"></p></li><li><p>故障恢复过程</p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607095752801.png" alt="image-20210607095752801"></p></li></ul><h3 id="5-恢复技术"><a href="#5-恢复技术" class="headerlink" title="5. 恢复技术"></a>5. 恢复技术</h3><ul><li><p>恢复技术依赖于数据库损坏的类型和程度</p></li><li><p>基本原则使事务的所有操作必须作为一各逻辑工作单元来对待，并且要保证数据库的一致性</p></li><li><p>数据库损坏的类型</p><ul><li>物理损坏</li><li>非物理或事物故障</li></ul></li><li><p>事物故障</p><ul><li><p>需要撤销（回滚）引起不一致的修改</p></li><li><p>为确保更新已到达物理存储设备，有必要 <u>重做</u>（前滚）一些事物</p></li><li><p>通过使用事物日志文件中更新前的值（前向）和更新后的值（后像），使数据库恢复到一致性的状态。这种技术也称：</p><p>基于日志的恢复技术</p><ul><li>延迟更新<ul><li>只有倒带事物的提交点，更新才被写入数据库</li><li>数据库的更新要延迟到事物执行成功并提交时</li><li>事物执行过程中，更新只被记录在事物日志和缓冲区中。当事物提交后，更新被记录到数据库</li><li>如果一个事物在到达提交点之前出现故障，将不会修改数据库，因此没必要进行撤销操作</li><li>但如果发生故障时事物的更新还未写入到数据库，则必须重做已提交事务的更新</li></ul></li><li>立即更新<ul><li>更新一旦发生即被施加到数据库中，二无需等到事务提交点以及所有的更改被保存在事务日志时</li><li>除了需要重做故障之前已提交的事务所做的更改外，还需要撤销当故障发生时仍未提交的事务锁造成的影响</li></ul></li></ul></li></ul></li></ul><h3 id="6-检查点技术"><a href="#6-检查点技术" class="headerlink" title="6. 检查点技术"></a>6. 检查点技术</h3><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607100744177.png" alt="image-20210607100744177"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607100815368.png" alt="image-20210607100815368"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607100832911.png" alt="image-20210607100832911"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607100856602.png" alt="image-20210607100856602"></p><p><img src="C:%5CUsers%5C25357%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210607100913674.png" alt="image-20210607100913674"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>浆果和YOLO</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/04/25/%E6%B5%86%E6%9E%9C%E5%92%8CYOLO/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/04/25/%E6%B5%86%E6%9E%9C%E5%92%8CYOLO/</id>
    <published>2021-04-25T08:57:12.000Z</published>
    <updated>2021-04-25T21:13:38.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="夜"><a href="#夜" class="headerlink" title="夜"></a>夜</h1><p>夜风、代码</p><p>反复、空无</p><h2 id="Django学习"><a href="#Django学习" class="headerlink" title="Django学习"></a>Django学习</h2><p><img src="/img/django.PNG" alt="image"></p><h2 id="科研报告"><a href="#科研报告" class="headerlink" title="科研报告"></a>科研报告</h2><p><img src="/img/keyan.PNG" alt="image"></p><h2 id="YOLOv4-tiny-tf2"><a href="#YOLOv4-tiny-tf2" class="headerlink" title="YOLOv4-tiny-tf2"></a>YOLOv4-tiny-tf2</h2><ul><li>调通</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="日常了啦" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/%E6%97%A5%E5%B8%B8%E4%BA%86%E5%95%A6/"/>
    
  </entry>
  
  <entry>
    <title>CV.md</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/04/20/CV/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/04/20/CV/</id>
    <published>2021-04-20T02:16:03.000Z</published>
    <updated>2021-04-20T03:19:47.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机视觉入门清单"><a href="#计算机视觉入门清单" class="headerlink" title="计算机视觉入门清单"></a>计算机视觉入门清单</h1><h2 id="一些题外话"><a href="#一些题外话" class="headerlink" title="一些题外话"></a>一些题外话</h2><p>这是一个新手友好但专家会耻笑的清单，如果您已经在这方面有所研究，请绕道</p><h2 id="1、一些基本准备"><a href="#1、一些基本准备" class="headerlink" title="1、一些基本准备"></a>1、一些基本准备</h2><ul><li><p>首先我们假设您了解过python语言 （<a href="https://www.liaoxuefeng.com/wiki/1016959663602400">如果你没有请点击这里</a>）</p></li><li><p>假设您清楚（<a href="https://zhuanlan.zhihu.com/p/43268790">如何使用python读取一张图片</a>）</p></li><li><p>假设您对python的matplotlib、numpy、PIL、opencv库有一定了解</p></li><li><p>您需要经常查阅网络相关资料，具体问答社区我推荐掘金、思否，我不建议直接使用百度</p></li></ul><p>如果以上您都没有接触过，没关系，您只需稍微熟悉python语言，便可以开始接下来的步骤</p><h2 id="2、机器学习-深度学习"><a href="#2、机器学习-深度学习" class="headerlink" title="2、机器学习-深度学习"></a>2、机器学习-深度学习</h2><p>什么？我们不是要学习计算机视觉（CV）吗？机器学习又是什么东东？</p><ul><li><p>这里有一本我建议你快速翻阅的书：</p><p>机器学习 周志华</p><p>（您可用通过<a href="https://www.jiumodiary.com/">鸠摩搜书</a>找到它）</p></li><li><p>您可能并不喜欢书中不容易理解的概念，也许观看视频是对您更好的方式，视频无毒，放心使用<a href="https://www.bilibili.com/video/BV17J411C7zZ?from=search&seid=3607404159794833850">点击这里</a></p></li><li><p>也许您并不想按部就班的开始，所以您也可用观看以下教程</p><p><a href="https://www.bilibili.com/video/BV1nJ411z7fe?from=search&seid=12810390985792567284">计算机视觉</a></p></li><li><p>这并不是最好的，如果您擅长英文，且清楚如何科学上网，您可以观国外的计算机视觉课程</p></li></ul><h2 id="3、框架"><a href="#3、框架" class="headerlink" title="3、框架"></a>3、框架</h2><p>不用着急，相信在学习之后，你将会了解到什么是聚类、回归、梯度下降、支持向量机、卷积神经网络、正向传播…我们会很自然的理解为什么要学习机器学习-深度学习，以及什么是计算机视觉，它有哪些应用</p><p>这里有两个重要框架的教程，您将通过一些流行框架快速构建您的深度学习-计算机视觉项目</p><ul><li><p><a href="https://www.tensorflow.org/guide/keras/sequential_model?hl=zh_cn">kears教程</a></p></li><li><p><a href="https://www.tensorflow.org/guide/keras/sequential_model?hl=zh_cn">tensorflow教程</a></p></li><li><p><a href="https://pytorch.org/">pytorch教程</a></p></li></ul><h2 id="4、项目实践"><a href="#4、项目实践" class="headerlink" title="4、项目实践"></a>4、项目实践</h2><p>最好的学习方法莫过于付出实践，并得到一份可观的成果，您可以跟随框架教程中的指引开始构建您的项目，并思考如何改进，重复这个过程，您将收获大量的知识！</p><ul><li><a href="https://github.com/sixone-Jiang/MachineLDigits.git">这里有一个手写数字识别的重写项目</a></li><li><a href="https://github.com/sixone-Jiang/MachineLimage">这里有一个图像分类的重写项目</a></li><li>更多的项目您可以通过搜索yolo、cnn找到</li></ul><h2 id="5、API"><a href="#5、API" class="headerlink" title="5、API"></a>5、API</h2><p>这里有一些API您可能需要经常查阅</p><ul><li><p><a href="http://www.numpy.org.cn/reference/">numpy</a></p></li><li><p><a href="matplotlib.org">matplotlib</a></p></li><li><p><a href="https://keras.io/api/preprocessing/image/">keras</a></p></li><li><p><a href="https://www.osgeo.cn/pillow/handbook/tutorial.html">PIL</a></p></li><li><p><a href="https://sklearn.apachecn.org/">sklearn</a></p></li></ul><h2 id="6、还有什么"><a href="#6、还有什么" class="headerlink" title="6、还有什么"></a>6、还有什么</h2><p>深度学习-计算机视觉，需要数据集的支持，您可能还会遇到数据集获取或处理的问题，我的建议是您可以寻找那些提供数据集的教程</p><p>否则  —– 这将成为您计算机视觉学习的最大困难</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>123</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/02/01/123/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2021/02/01/123/</id>
    <published>2021-02-01T07:52:24.000Z</published>
    <updated>2021-02-01T07:52:24.336Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>investing_R</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/12/03/investing-R/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/12/03/investing-R/</id>
    <published>2020-12-03T04:54:49.000Z</published>
    <updated>2020-12-03T05:25:04.533Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>突发奇想就想写点反思</p><ol><li><p>当今中国形势下，泡沫经济遍地，通胀严重，绝大多数奋斗的穷人们反而债台高筑</p></li><li><p>就疫情而言，如果我能提前意识到投资，或是进行股票型的投资，大抵我现在的资产是会有0.5的增长的。</p></li><li><p>我认为，其逻辑在于，疫情虽然导致公司倒闭，实体经济受挫，但资产本身是客观存在且均衡的，一类行业受挫另一部分必然增长，（不论是以通胀的形式还是垄断收割的形式）。</p></li><li><p>我这样三无的无产阶级是没有固定资产来给我投资决策去对抗通胀的。</p></li><li><p>但也许，可以通过金融的方式来利用通胀。</p></li><li><p>毕竟，财富是不对等的，我有能力对抗通胀的话，相当于是实现了资本投资</p></li><li><p>创业要承担风险， 股票也是，而对我而言，股票的成功率比我创业大得多（我不具有原生的生产资料和固定资本），也对我日常生活的影响小得多。</p></li><li><p>就收益来讲，如果我能保持每月0.05的收益率，年化收益将达到0.796，这是相当恐怖的，以我0.61的流动资产来进行投资，也足以实现财富自由。</p></li><li><p>当然更加稳妥的决策率我定在0.36，这是我而言风险很低的决策，年化将达到0.529。</p></li><li><p>新生企业和房地产我是不敢染指的，泡沫太过严重。</p></li></ol></li></ul><p><em>我并不是什么经济学家，也不是专业的投资者，我只是在神明大人的祝福下，具有一些些洞察力和决策力的可爱的孩子~</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Miracle-Investigator" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Miracle-Investigator/"/>
    
  </entry>
  
  <entry>
    <title>wandering</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/12/02/wandering/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/12/02/wandering/</id>
    <published>2020-12-02T04:00:03.000Z</published>
    <updated>2020-12-02T05:42:46.766Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><del>或许这样的感觉将会伴随我一生</del></li><li><del>但幸好，有你陪着我</del></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="daily" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/daily/"/>
    
  </entry>
  
  <entry>
    <title>special</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/special/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/special/</id>
    <published>2020-11-18T13:35:28.000Z</published>
    <updated>2020-11-25T00:51:16.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="悦悦-生-日-快-乐-！！！！！"><a href="#悦悦-生-日-快-乐-！！！！！" class="headerlink" title="悦悦~ 生~ 日 ~ 快~ 乐 ！！！！！"></a>悦悦~ 生~ 日 ~ 快~ 乐 ！！！！！</h1><h1 id="恭喜你历经99-六-一-难-成功找到了这个隐藏小惊喜哟"><a href="#恭喜你历经99-六-一-难-成功找到了这个隐藏小惊喜哟" class="headerlink" title="恭喜你历经99 六 一 难 成功找到了这个隐藏小惊喜哟"></a>恭喜你历经99 六 一 难 成功找到了这个隐藏小惊喜哟</h1><ul><li>video=myprincess</li></ul><h1 id="去下面这个地方看看都有啥吧？"><a href="#去下面这个地方看看都有啥吧？" class="headerlink" title="去下面这个地方看看都有啥吧？"></a>去下面这个地方看看都有啥吧？</h1><ul><li>F:\Birthday\final_special\</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>乐</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E4%B9%90/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E4%B9%90/</id>
    <published>2020-11-18T11:35:50.000Z</published>
    <updated>2020-11-25T00:52:02.683Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>呐呐，是我的女孩子喔，只属于我，哟</li><li>我很爱很爱很爱你，愿意包容你的一切</li><li>我愿意为了你而做出改变，热切渴望着和你的未来</li><li>我愿意为着我们的幸福而付出全力</li><li>我愿意再为你守护的同时，也守护你</li><li>我愿意，因为我遇见你，本身就远胜奇迹</li></ul><hr><h3 id="六一"><a href="#六一" class="headerlink" title="六一"></a>六一</h3><ul><li>并非唯物主义，怎知，吹落星雨</li><li>未曾画圈南海，岂敢，赋词起兴</li><li>我不明，茨威格笔下的使命</li><li>我不及，普朗克心中的天地</li><li>书未破万卷，路难至千里</li><li>我只能是我自己，私自将你</li><li>当做我全部的意义<h3 id="悦悦生日快乐！！！"><a href="#悦悦生日快乐！！！" class="headerlink" title="悦悦生日快乐！！！"></a><a href="https://sixone-jiang.github.io/2020/11/18/HappyBirthday/">悦悦生日快乐！！！</a></h3><img src="" alt="爱心"><br>！<a href="">生日蛋糕</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>快</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E5%BF%AB/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E5%BF%AB/</id>
    <published>2020-11-18T11:35:38.000Z</published>
    <updated>2020-11-25T00:50:59.662Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="接下来的，可要集中注意力了丫"><a href="#接下来的，可要集中注意力了丫" class="headerlink" title="接下来的，可要集中注意力了丫 ~"></a>接下来的，可要集中注意力了丫 ~</h2><ul><li>you just as my brother but already is my all means<div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"/img/birthday_3.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></li><li>you not only my brother but also promise me that give me all you have<div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"video":{"url":"/img/birthday_4.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></li></ul><ul><li><p>这可都是花了人家好多好多好多(真的多得数不清了，呜呜呜心疼自己几秒钟)个不睡觉的中午以及熬夜的夜晚，还顶着我的傻女人这个发生气的气气，当着一个气鼓鼓的接受气还要又气鼓鼓又心软的给你准备的喔？</p></li><li><p><a href="https://sixone-jiang.github.io/2020/11/18/乐/">咿呀，得抓经时间带你去下一个地方了啦~</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>日</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E6%97%A5/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E6%97%A5/</id>
    <published>2020-11-18T11:35:28.000Z</published>
    <updated>2020-11-25T00:50:56.492Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="要不要猜一猜-接下来都是什么呢丫"><a href="#要不要猜一猜-接下来都是什么呢丫" class="headerlink" title="要不要猜一猜~ 接下来都是什么呢丫 ~ ~"></a>要不要猜一猜~ 接下来都是什么呢丫 ~ ~</h2><ul><li>一定会，好眼熟的呢 ~</li><li>全屏播放会更加舒服哟 ~<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>/<br>s<br>p<br>e<br>c<br>i<br>a<br>l<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<h3 id="first"><a href="#first" class="headerlink" title="first"></a>first</h3><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"theme":"#FADFA3","loop":true,"video":{"url":"/img/birthday_1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h3 id="second"><a href="#second" class="headerlink" title="second"></a>second</h3><div id="dplayer3" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer3"),"theme":"#FADFA3","loop":true,"video":{"url":"/img/birthday_2.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h2 id="有没有回忆起都是什么时候丫？"><a href="#有没有回忆起都是什么时候丫？" class="headerlink" title="有没有回忆起都是什么时候丫？"></a>有没有回忆起都是什么时候丫？</h2><a href="https://sixone-jiang.github.io/2020/11/18/快/">咕噜咕噜的就咕噜到下一个地方去啦~</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>生</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E7%94%9F/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E7%94%9F/</id>
    <published>2020-11-18T11:29:55.000Z</published>
    <updated>2020-11-25T00:50:52.002Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>悦悦悦悦  </li><li>超小声~ 呐呐 要乖乖的嫁给六一哟 ~</li><li>六一，最喜欢你啦！！！ </li><li>来康康这个还眼熟嘛，嘻嘻 ~</li><li>诗诗<br><img src="/img/poem_4.jpg" alt="image"></li><li>可爱的一天<br><img src="/img/poem_5.jpg" alt="image"></li><li>雪绘<br><img src="/img/poem_0.jpg" alt="image"></li><li>微光与小肚子<br><img src="/img/poem_1.jpg" alt="image"></li><li>绘愿<br><img src="/img/poem_2.jpg" alt="image"></li><li>夜空、雪花、相遇<br><img src="/img/poem_3.jpg" alt="image"></li><li>画画呢<div id="dplayer4" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer4"),"theme":"#FADFA3","loop":true,"video":{"url":"/img/birthday_0.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></li><li><a href="https://sixone-jiang.github.io/2020/11/18/日/">下一个目的地~</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>wrong_end</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/wrong-end/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/wrong-end/</id>
    <published>2020-11-18T11:16:26.000Z</published>
    <updated>2020-11-25T00:51:10.922Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么？？？？？你说不愿意？？？？？"><a href="#什么？？？？？你说不愿意？？？？？" class="headerlink" title="什么？？？？？你说不愿意？？？？？"></a>什么？？？？？你说不愿意？？？？？</h2><h2 id="老子今天不同意！！！！！"><a href="#老子今天不同意！！！！！" class="headerlink" title="老子今天不同意！！！！！"></a>老子今天不同意！！！！！</h2><h2 id="不同意我—–我就强行让你从了我！！哼！！！"><a href="#不同意我—–我就强行让你从了我！！哼！！！" class="headerlink" title="不同意我—–我就强行让你从了我！！哼！！！"></a>不同意我—–我就强行让你从了我！！哼！！！</h2><h2 id="看我强抢民女、吃干抹净，哼！！！那我也很恨爱你呢！"><a href="#看我强抢民女、吃干抹净，哼！！！那我也很恨爱你呢！" class="headerlink" title="看我强抢民女、吃干抹净，哼！！！那我也很恨爱你呢！"></a>看我强抢民女、吃干抹净，哼！！！那我也很恨爱你呢！</h2><h2 id="哼！竟然拒绝我，臭女人"><a href="#哼！竟然拒绝我，臭女人" class="headerlink" title="哼！竟然拒绝我，臭女人!!!"></a>哼！竟然拒绝我，臭女人!!!</h2><h2 id="哼！！！原地气鼓鼓1s！！！"><a href="#哼！！！原地气鼓鼓1s！！！" class="headerlink" title="哼！！！原地气鼓鼓1s！！！"></a>哼！！！原地气鼓鼓1s！！！</h2><h2 id="咕噜咕噜我错了嘛，不愿意咱就不改那些地方了嘛"><a href="#咕噜咕噜我错了嘛，不愿意咱就不改那些地方了嘛" class="headerlink" title="咕噜咕噜我错了嘛，不愿意咱就不改那些地方了嘛"></a>咕噜咕噜我错了嘛，不愿意咱就不改那些地方了嘛</h2><h2 id="我再给你一次机会好不好？人家就是离不开你嘛"><a href="#我再给你一次机会好不好？人家就是离不开你嘛" class="headerlink" title="我再给你一次机会好不好？人家就是离不开你嘛"></a>我再给你一次机会好不好？人家就是离不开你嘛</h2><h2 id="咕噜咕噜，什么？这你都不同意"><a href="#咕噜咕噜，什么？这你都不同意" class="headerlink" title="咕噜咕噜，什么？这你都不同意"></a>咕噜咕噜，什么？这你都不同意</h2><h2 id="那你提要求嘛，什么样的我都答应的，不要离开我好不好…"><a href="#那你提要求嘛，什么样的我都答应的，不要离开我好不好…" class="headerlink" title="那你提要求嘛，什么样的我都答应的，不要离开我好不好…"></a>那你提要求嘛，什么样的我都答应的，不要离开我好不好…</h2><ul><li>-&gt; <a href="https://sixone-jiang.github.io/2020/11/18/HappyBirthday/">“下一次机会”</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>悦悦</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E6%82%A6%E6%82%A6/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/%E6%82%A6%E6%82%A6/</id>
    <published>2020-11-18T10:57:07.000Z</published>
    <updated>2020-11-25T00:50:46.723Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Bingo-回答正确"><a href="#Bingo-回答正确" class="headerlink" title="Bingo~ 回答正确"></a>Bingo~ 回答正确</h1><h2 id="奖励就是没有奖励-哈哈"><a href="#奖励就是没有奖励-哈哈" class="headerlink" title="奖励就是没有奖励  ~ 哈哈"></a>奖励就是没有奖励  ~ 哈哈</h2><p>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>s<br>i<br>x<br>o<br>n<br>e<br>-<br>j<br>i<br>a<br>n<br>g<br>.<br>g<br>i<br>t<br>h<br>u<br>b<br>.<br>i<br>o<br>/<br>2<br>0<br>2<br>0<br>/<br>1<br>1<br>/<br>1<br>8<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|<br>|</p><h1 id="啊哈-其实是有奖励的哟，快来看看这是什么丫"><a href="#啊哈-其实是有奖励的哟，快来看看这是什么丫" class="headerlink" title="啊哈 ~ 其实是有奖励的哟，快来看看这是什么丫~"></a>啊哈 ~ 其实是有奖励的哟，快来看看这是什么丫~</h1><p><img src="/img/birthday_img_1.jpg" alt="image"></p><h1 id="嘻嘻还喜欢嘛？"><a href="#嘻嘻还喜欢嘛？" class="headerlink" title="嘻嘻还喜欢嘛？"></a>嘻嘻还喜欢嘛？</h1><ul><li><a href="https://sixone-jiang.github.io/2020/11/18/生/">戳这里去下一个地方哟~</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>HappyBirthday</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/HappyBirthday/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/18/HappyBirthday/</id>
    <published>2020-11-18T10:54:22.000Z</published>
    <updated>2020-11-25T00:53:12.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我最最最亲爱的悦悦又长大一岁了丫"><a href="#我最最最亲爱的悦悦又长大一岁了丫" class="headerlink" title="我最最最亲爱的悦悦又长大一岁了丫~"></a>我最最最亲爱的悦悦又长大一岁了丫~</h1><p>mua~ mua、mua~<br>先自罚三杯~ 嘻嘻<br>咕噜咕噜~<br>啦啦啦~<br>在看接下来的生日祝福之前，六一可要把一些不可爱的话说在这之前喔~，呐呐，要做好心理准备呢喔？</p><h1 id="吟唱开始"><a href="#吟唱开始" class="headerlink" title="吟唱开始"></a>吟唱开始</h1><h2 id="我这个臭女孩子都有哪些臭毛病呢？来来来，我们来列个清单喔！哼！"><a href="#我这个臭女孩子都有哪些臭毛病呢？来来来，我们来列个清单喔！哼！" class="headerlink" title="我这个臭女孩子都有哪些臭毛病呢？来来来，我们来列个清单喔！哼！"></a>我这个臭女孩子都有哪些臭毛病呢？来来来，我们来列个清单喔！哼！</h2><ul><li>傲慢</li><li>当别的事情让悦悦生气的时候，六一发现，六一挨流弹最佳的方案是不说话，不说话也会被悦悦气鼓鼓</li><li>悦悦生气——&gt; 就会着急 ——&gt; 着急，就不会考虑六一的感受 ——&gt; 不考虑六一感受，六一憋着不说话-&gt;悦悦生气++</li><li>悦悦生气的时候真的几乎不为别人考虑喔，而六一会自以为是的认为自己对你比较特殊，可是你的表现让我觉得这种特殊还不够</li><li>悦悦，我想你下次想要表达情绪的时候可以对自己默念，你所经历的累、忙、不开心、不幸运和不美好，六一其实也在等同的承受着呀，我们经历的不美好和不幸运，从来就没有谁更多一点哟。</li></ul><h1 id="来做出你的选择吧！！！"><a href="#来做出你的选择吧！！！" class="headerlink" title="来做出你的选择吧！！！"></a>来做出你的选择吧！！！</h1><ul><li><a href="https://sixone-jiang.github.io/2020/11/18/wrong-end/">“不愿意”</a> <strong>、————、_</strong> <a href="https://sixone-jiang.github.io/2020/11/18/悦悦/">“愿意”</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Birthday" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Birthday/"/>
    
  </entry>
  
  <entry>
    <title>致命的自负</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/11/%E8%87%B4%E5%91%BD%E7%9A%84%E8%87%AA%E8%B4%9F/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/11/%E8%87%B4%E5%91%BD%E7%9A%84%E8%87%AA%E8%B4%9F/</id>
    <published>2020-11-11T11:20:05.000Z</published>
    <updated>2020-11-11T11:21:15.822Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TODO list</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Book" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Book/"/>
    
  </entry>
  
  <entry>
    <title>rulesFromMiracle</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/11/rulesFromMiracle/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/11/rulesFromMiracle/</id>
    <published>2020-11-11T10:05:42.000Z</published>
    <updated>2020-12-02T05:26:32.473Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><strong><em>为神明眷属 (God-Blessing )</em></strong></li></ul><hr><ul><li><p>幸运</p></li><li><p>图形学</p></li><li><p>理性决策</p></li><li><p>复验决策</p></li><li><p>抑制贪婪</p></li><li><p>效率</p></li><li><p>学习</p></li><li><p>简洁敏锐</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Miracle-Investigator" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/Miracle-Investigator/"/>
    
  </entry>
  
  <entry>
    <title>2020-11-10</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/10/2020-11-10/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/10/2020-11-10/</id>
    <published>2020-11-10T11:25:57.000Z</published>
    <updated>2020-11-10T11:52:13.381Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><ul><li><p>今日份的奇奇怪怪的感觉</p><p>可能情感上因为我的悦悦，变得越来越丰富，越来越能感受到开心、幸福、喜悦，但同时也更深切的感受到痛苦、失落、变得敏感。情绪的稳定性降低了，有点…害怕吧，因为我所表达的情感不再是以前那样非常受自己控制的了，而是有了很多，很浪漫、我解释不了、也不愿去看明白的成分。</p></li><li><p>有点担心</p><p>担心现在的自己对我的悦悦而言，是一种心理学上的幻觉，因为悦悦说，对现在的我很满意，因此我一方面担心我此后不再是像悦悦期待的那样好的时候，悦悦接受不了这样的六一，因为六一不能保证明天的六一会比今天的六一更让悦悦满意，彼此总是以“我会为了你而改变而去改变的话“，我们都会很累的喔，可能为了对方去改变自己 与 完全接受对方的一些毛病 之间，需要有一个微妙的平衡。</p><p>另一方面，我有些害怕我不能给悦悦足够的惊喜、新鲜感，因为生活总是需要惊喜、意料之外、美好、期待的，人总是易变、欲望永远没有界限。我们都想把最好的最好的给彼此，可时间还很长、很长、我们需要有所保留——不是指情感上的，而是在我们的表达上、付出上、依赖关系上，我们没有办法违背客观存在的规律，或者说如果违背人正常心理学规律、是要付出很大代价的。悦悦和我之间的爱很伟大很伟大，远胜奇迹，但这并不是用来和正常规律相抵抗的理由，我认为我们应该更多的顺应他，接受他，然后在这之上铸造我们所想的奇迹。</p><p>所以我们彼此都会又情绪低落的时候，我们彼此都怀着对对方的不确信、有着自己的担忧，我希望我们之间多一些“坦诚”，这个坦诚是指，不要有过分的从对方角度出发的顾虑，这样的顾虑很容易让我们陷入一种闭环——始终在臆测对方的思想，害怕交谈或自己的某个将要行使的行为会引起对方不开心、激起矛盾、可最大的矛盾恰恰是缺乏沟通引起的，（不大胆的告诉对方自己心中是怎么想的，就是单纯的不开心，对方也是会发现你的不开心，并和你一起陷入相同的闭环的喔）</p><p>以上</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="daily-with-myLover" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/daily-with-myLover/"/>
    
  </entry>
  
  <entry>
    <title>My_Lover</title>
    <link href="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/07/My-Lover/"/>
    <id>https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/2020/11/07/My-Lover/</id>
    <published>2020-11-07T08:23:36.000Z</published>
    <updated>2020-11-07T08:29:37.671Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="weddingDay"><a href="#weddingDay" class="headerlink" title="weddingDay"></a>weddingDay</h1><ul><li><p>ourweddingDay</p><h1 id="2030-6-1"><a href="#2030-6-1" class="headerlink" title="2030-6-1"></a><strong>2030-6-1</strong></h1></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="my_will" scheme="https://github.com/sixone-Jiang/sixone-Jiang.github.io.git/tags/my-will/"/>
    
  </entry>
  
</feed>
